[["index.html", "Becoming Fluent in Data Empirical Research (with R) – Based On True Stories Dust and Dark", " Becoming Fluent in Data Empirical Research (with R) – Based On True Stories Marco Kühne 2022-08-23 Dust and Dark A dusty lecture hall. The light cut through the darkness from the left side of the room. A dozen of seats in each bench, only few occupied by small groups of students who were trying to make sure that they sit far from each other and as far as possible from the lecturer. The bearish but competent assistant professor explained how to analyze and evaluate the results of various memory and cognition experiments through boxplots, t-test and the like in that software. My creaky, slow but loyal laptop in front of me. That’s where R was introduced in my psychology undergraduate studies. Conceptual Skills: What makes a good comparison. Never use pie charts. Data Skills: R Basics: Install and load a package. Load Stata files into R. Data Manipulation: tidyverse language (glimpse(), count(), filter(), summarise()). Data Visualization: Pie chart and bar plot. "],["teach-learn-repeat.html", "Teach – Learn – Repeat", " Teach – Learn – Repeat I fell in love with learning by teaching the moment I came across this concept. It put the experiences I made into scientific context. I had to pass math classes in my undergraduates, and I became a math tutor for years. I really wanted to master ballroom dance, so I became a dance instructor for life. The mode of teaching can differ. I started teaching in the classroom and ballroom and have a standing on Wikipedia. You can contribute on Wikipedia and will get feedback on your neutral point of view, academic writing and rigor. Feedback on YouTube and Social Media can be more diffuse. Now, I turn to writing a book from my collected notes (and questions) on empirical research. I hope to force myself to pinpoint exactly what I know and don’t know and how to fill the gaps. Luckily, I am not alone with the approach of creating classes or writing books to learn. I could feel that econometrics was indispensable, and yet I was missing something. But what? It was a theory of causality […]. So, desperate, I did what I always do when I want to learn something new — I developed a course on causality to force myself to learn all the things I didn’t know. Scott Cunningham. In: Causal Inference – The Mixtape This project helped me to learn more about R, RStudio, R Markdown, R Bookdown, HTML/CSS, Git and Github, empirical research, causal inference, statistics, math, frustration tolerance and fun. "],["a-question-you-care-about.html", "A Question You Care About", " A Question You Care About Are you passionate about something? Research starts off from a question you really care about. Math, statistics and programming are easier to digest when you are intrinsically motivated to find out more about your topic of interest. This is a brief guide on the main parts of the empirical research process. There’s more to the end of it. After answering the research question, a theoretical interpretation can be derived, results are compared to earlier research and conclusions are drawn. Give it a personal touch if possible. The topic can be related to hobbies, family or friends, education, job or neighborhood. It can be something from the present or past. It can be a pet as well as personality, believes and attitudes. It can be gardening or Fortnite. Choose something that you are really interested in. Next, retain a neutral point of view. Collect and analyze data first, discuss and compare your results to others, conclude at the end. What you can learn … What is at the heart of empirical research: Questions. How to get and handle tabular data. The principles of relationships and trends. How to model relationships with equations. Estimate a relationship with Regression. The implementation in the statistical software R. "],["data-is-everywhere.html", "Data is everywhere Methods Types of Data", " Data is everywhere Data collection is the process of gathering and measuring information. Methods There are common data collection methods: Surveys (paper vs. online) Interviews Observation Experiment Focus group (qualitative research) Case study (qualitative research) Types of Data Quantitative vs qualitative Quantitative data deals with things that are measurable and can be expressed in numbers or figures, or using other values that express quantity. That being said, quantitative data is usually expressed in numerical form and can represent size, length, duration, amount, price, and so on. Qualitative data is often non-numeric. Data can be text, audio or visual. There are quantitative approaches to analyse text (text mining, e.g. sentiment analysis) and visual data (machine learning, e.g. image classification). Primary vs secondary Primary data refers to the first hand data gathered by the researcher or practitioner himself. Secondary data means data collected by someone else earlier. As you expect, it can be more complicated, cost and time expensive to collect data yourself. Cross-sectional vs. longitudinal data Cross-sectional data is at a point in time (e.g. one year). Longitudinal data is repeated measures over time (e.g. multiple years). Also called panel data. "],["about-the-author.html", "About the author", " About the author Welcome! My name is Marco Kühne (http://marco-kuehne.com/). The very first thing I want to do is to invite you to call me Marco. That is, if we meet on the street, you come talk to me during office hours, you ask some question; Marco’s the name that I respond to. I am a PhD candidate in Economics at the European University Viadrina (https://www.wiwi.europa-uni.de/). I am generally keen on teaching topics related to research design, quantitative methods, and statistical software. My main methodological interests in quantitative social science include panel data modelling, causal inference with observational data and R programming. I am also a gardening fanatic, a coffee enthusiast, an engaged ballroom dancer, a (vegetarian) food lover. I enjoy cutting down big trees and practicing new languages in its own sake. Feel free to contact me! Figure 0.1: plotting example "],["intro-to-r.html", "Intro to R Watching paint dry When paint becomes art Define objects", " Intro to R An .R file is a text document. Open (and edit) it with a any text editor (or RStudio). Comments start with one or multiple hash tags. Watching paint dry R is a calculator. Use this R demo in the browser to explore basic features of R. Commands in the script.R tab are executed by the Run bottom. It runs the entire script and prints out results in the R Console. This procedure is simplified but similar to a more complex integrated developer environment (IDE) like RStudio. Copy and paste (or modify) commands from lower sections into the script. Try 1:20 and hit Run. eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIENvbW1lbnQ6IFIgYXMgYSBjYWxjdWxhdG9yIGlzIGEgYm9yaW5nIGFzIHdhdGNoaW5nIHBhaW50IGRyeS5cbjIxKjIgIn0= When paint becomes art Copy paste the below code into script.R and hit Run. It opens a new tab Plots. plot(x = iris$Sepal.Length, y = iris$Petal.Length, # x and y variables col = iris$Species, # color by species! pch = 16, cex = 2, # aesthetic parameters xlab = &quot;Sepal Length&quot;, ylab = &quot;Petal Length&quot;, # axis labels main = &quot;Flower characteristics in Iris&quot;) # title # Adding grid: grid() # Adding a legend: legend (x = 4.5, y = 7, legend = levels(iris$Species), pch = 16, col = c(1:3)) Define objects Define R objects for later use. Objects are case-sensitive (X is different from x). Objects can take any name, but its best to use something that makes sense to you, and will likely make sense to others who may read your code. Numeric Variables a &lt;- 2 b = 3 a + b #&gt; [1] 5 Logical Variables &gt; harvard &lt;- TRUE # spacing doesn&#39;t matter &gt; yale &lt;- FALSE &gt; princeton &lt;- F # short for FALSE &gt; &gt; # Attention: FALSE=0, TRUE=1 &gt; harvard + 1 #&gt; [1] 2 String Variables emily &lt;- &#39;She is a friend.&#39; # string / character class / plain text libby &lt;- &quot;she is a coworker&quot; # use &#39; and &quot; interchangeably other &lt;- &quot;people&quot; # prefer &quot; Factor Variables A factor is an ordered categorical variable. c() is a generic function which combines its arguments. fruit &lt;- as.factor(c(&quot;banana&quot;, &quot;apple&quot;) ) # The default ordering is alphabetic fruit #&gt; [1] banana apple #&gt; Levels: apple banana dose &lt;- as.factor(c(&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;) ) # The default ordering is alphabetic dose #&gt; [1] low medium high #&gt; Levels: high low medium Combine objects # Declare new objects using other variables c &lt;- a + b + 10 # Open z object or put everything in parentheses (c &lt;- a + b + 10) #&gt; [1] 15 Vectors Think of a vector as a single column in a spreadsheet. vectorA &lt;- c(1,2,b) vectorB &lt;- c(TRUE,TRUE,FALSE) vectorC &lt;- c(emily, libby, other) # Vector Operations vectorA - vectorB # Vector operation AND auto-change TRUE =1, FALSE=0 #&gt; [1] 0 1 3 Data frame # think of it conceptually like a spreadsheet dataDF &lt;- data.frame(numberVec = vectorA, trueFalseVec = vectorB, stringsVec = vectorC) # Examine an entire data frame dataDF #&gt; numberVec trueFalseVec stringsVec #&gt; 1 1 TRUE She is a friend. #&gt; 2 2 TRUE she is a coworker #&gt; 3 3 FALSE people # Declare a new column dataDF$NewCol &lt;- c(10,9,8) # Examine with new column dataDF #&gt; numberVec trueFalseVec stringsVec NewCol #&gt; 1 1 TRUE She is a friend. 10 #&gt; 2 2 TRUE she is a coworker 9 #&gt; 3 3 FALSE people 8 # Examine a single column dataDF$numberVec # by name #&gt; [1] 1 2 3 dataDF[,1] # by index...remember ROWS then COLUMNS #&gt; [1] 1 2 3 # Examine a single row dataDF[2,] # by index position #&gt; numberVec trueFalseVec stringsVec NewCol #&gt; 2 2 TRUE she is a coworker 9 # Examine a single value dataDF$numberVec[2] # column name, then position (2) #&gt; [1] 2 dataDF[1,2] #by index row 1, column 2 #&gt; [1] TRUE Plots "],["group-comparison.html", "Chapter 1 Group Comparison 1.1 Learning Goals 1.2 Story Telling 1.3 Comparability 1.4 SOEP Practice Data 1.5 Never use pie charts", " Chapter 1 Group Comparison In this section you learn about how to compare groups. 1.1 Learning Goals Conceptual Skills: What makes a good comparison. Never use pie charts. Data Skills: R Basics: Install and load a package. Load Stata files into R. Data Manipulation: tidyverse language (glimpse(), count(), filter(), summarise()). Data Visualization: Pie chart and bar plot. Social sciences is about the study of human beings and their interactions. As such, we frequently want to compare two or more groups of human beings, organizations, teams, countries, etc., with each other to see whether they are similar or different from each other. Sometimes we also want to track individuals over time and see how they may have changed in some way or other. In short, comparing groups is an essential technique to make inferences and helps us better understand the diversity surrounding us. 1.2 Story Telling Groups can be compared via numeric figures or graphical instruments. Numeric summaries can be the mean, median or mode. But it can be as simple as a percentage or proportion. A graphical representation can be a boxplot, histogram or density curve. Note that certain calculations and visualizations only make sense for continuous variables (cf. scale of measurements). Most data visualization is done for the purpose of communication. We have an insight about a dataset, and we have a potential audience, and we would like to convey our insight to our audience. To communicate our insight successfully, we will have to present the audience with a clear and exciting story. Figure 1.1: Figure 1: Possible gender difference in working parttime. 1.3 Comparability What makes a good comparison? Before we can jump into group comparisons, we need to make ourselves aware of whether our groups can be compared in the first place. We are looking at the characteristics of our groups. Some commonly considered features include: Size: Are the groups about equally large? Time: Was the data collected around the same time? Exogenous variables: Is the distribution of characteristics we are not interested in approximately the same across groups? 1.4 SOEP Practice Data The SOEP practice dataset is a highly simplified Stata practice dataset, which can be downloaded from the homepage of DIW Berlin (in German or English): https://www.diw.de/en/diw_01.c.603154.en/soep_in_the_college_classroom.html There are two versions (years 2000-2004, 9 variables and years 2015-2019, 15 variables). They contain multiple observations per person over time. Each row is uniquely identified by a year-id combination (long format panel data). 1.4.1 Loading the Data In the following a temporary file is created to store the .zip information from SOEP practice data. Thus there is no need to manually click and download a file and set the correct path on the computer. # load package library(haven) # tempfile returns a vector of character strings which can be used as names for temporary files. temp &lt;- tempfile() # download the .zip file to your temporary file location download.file(&quot;https://www.diw.de/documents/dokumentenarchiv/17/diw_01.c.412698.de/soep_lebensz_en.zip&quot;,temp) # type temp in your console to get this file name # you can open your temporary files on Windows: %userprofile%\\AppData\\Local\\Temp # you may search for the file name # load Stata data with haven package soep &lt;- read_dta(unz(temp, &quot;soep_lebensz_en.dta&quot;)) # unlink deletes the file(s) or directories specified by x. unlink(temp) If data is somewhere else, you need to specify the exact path (relative or absolute path) to the data. If you use haven (or any other package) for the first time, you have to install (e.g. via a command install.packages(\"haven\")). You can also install and check packages in the right lower panel (cf. “packages”). 1.4.2 Inspect the Data The SOEP practice dataset 1 consists of a total of 9 original variables and 12,922 measurements. We can see 9 variables as columns with the glimpse() function. The first two variable (id, year) are identifier. The panel data is in long format, i.e. every row is a person-year combination. It covers five time points. The last two variables are standardized versions (satisfaction and health). Actually we have 5 variables to analyze. library(tidyverse) glimpse(soep) #&gt; Rows: 12,922 #&gt; Columns: 9 #&gt; $ id &lt;dbl&gt; 312, 399, 399, 457, 457, 457, 748, 761, 761, 1044, 1044, 10… #&gt; $ year &lt;dbl&gt; 2004, 2000, 2001, 2000, 2002, 2004, 2000, 2000, 2001, 2000,… #&gt; $ sex &lt;dbl+lbl&gt; 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1… #&gt; $ education &lt;dbl&gt; NA, 12.0, 12.0, 18.0, 18.0, 18.0, 14.0, 16.0, 16.0, 14.0, 1… #&gt; $ no_kids &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2,… #&gt; $ health_org &lt;dbl+lbl&gt; 4, 4, 4, 3, 3, 2, 3, 3, 3, 4, 3, 4, 4, 4, 2, 2, 2, 1, 2… #&gt; $ satisf_org &lt;dbl+lbl&gt; 7, 8, 9, 8, 7, 4, 5, 7, 7, 5, 7, 8, 6, 7,… #&gt; $ health_std &lt;dbl&gt; 0.5670103, 0.5670103, 0.5670103, -0.4639175, -0.4639175, -1… #&gt; $ satisf_std &lt;dbl&gt; -0.09090909, 0.47727272, 1.04545450, 0.47727272, -0.0909090… First, let’s check the consecutive time points. The count() function provides the number of occurrences for values of a variables. soep %&gt;% count(year) #&gt; # A tibble: 5 × 2 #&gt; year n #&gt; &lt;dbl&gt; &lt;int&gt; #&gt; 1 2000 3198 #&gt; 2 2001 2690 #&gt; 3 2002 2485 #&gt; 4 2003 2299 #&gt; 5 2004 2250 We observe a decline in observations over time. People drop out of the survey for various reasons (panel attrition). SOEP regularly adds refreshment samples to compensate for this. Sometimes we miss data in between years. Person number 457 participated in 2000, 2002 and 2004: soep %&gt;% filter(id == 457) #&gt; # A tibble: 3 × 9 #&gt; id year sex education no_kids health_org satisf_org health_std #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; #&gt; 1 457 2000 0 [male] 18 0 3 [satisfactory] 8 [8 Sati… -0.464 #&gt; 2 457 2002 0 [male] 18 0 3 [satisfactory] 7 [7 Sati… -0.464 #&gt; 3 457 2004 0 [male] 18 0 2 [poor] 4 [4 Sati… -1.49 #&gt; # … with 1 more variable: satisf_std &lt;dbl&gt; Person 457 was not available in the year 2001 for some reason. 1.4.3 Stata information The haven package tries to keep as much information from the Stata source as possible. This can be helpful because we can look up background information, e.g. about coding. attr(soep$sex, &quot;labels&quot;) #&gt; male female #&gt; 0 1 1.4.4 Summary statistics Now let’s have a look at summary statistics for the dataset. The stargazer package (with type=\"text\") displays number of observations, mean, standard deviation, min, max and percentiles to the console or markdown file (it produces a .tex table by default). stargazer requires a dataframe as input. haven created a tibble from the Stata .dta file. Finally, we select all variables but the first two, since they are identifier and any calculation, e.g. the mean of personal IDs, does not make much sense here. library(stargazer) stargazer(as.data.frame(soep)[,(3:9)], type=&quot;text&quot;) #&gt; #&gt; =============================================== #&gt; Statistic N Mean St. Dev. Min Max #&gt; ----------------------------------------------- #&gt; sex 12,922 0.539 0.499 0 1 #&gt; education 11,454 11.874 2.469 7.000 18.000 #&gt; no_kids 12,016 0.647 0.931 0 3 #&gt; health_org 12,907 3.455 0.973 1 5 #&gt; satisf_org 12,922 7.156 1.762 0 10 #&gt; health_std 12,907 0.005 1.003 -2.526 1.598 #&gt; satisf_std 12,922 -0.002 1.001 -4.068 1.614 #&gt; ----------------------------------------------- The mean of sex is 0.539. What does it tell you? 1.4.5 Missing data Check out the first glimpse() table. Have you noticed the value NA in education? NA stand for non available and is the indicator for missing data in R. We ask for a table count of all values in the data that are either missing or not missing. table(is.na(soep)) #&gt; #&gt; FALSE TRUE #&gt; 113894 2404 One option is substituting values (e.g. the mean) for missing cells (imputation). The alternative, for simplicitiy, is removing all rows which contain a missing value in any column. This is called a complete case analysis. soep_no_na &lt;- soep %&gt;% filter(complete.cases(.)) 1.4.6 Standardization Look again at the glimpse() output or stargazer() table. Notice two versions of satisfaction and health, i.e. satisf_org and satisf_std which represent satisfaction on the original scale (from 0 to 10) and a standardized version of satisfaction. Health is ranging from 1 to 5. How can we compare the mean of satisfaction and health? In statistics, standardization is the process of putting different variables on the same scale. This process allows you to compare scores between different types of variables (compare apples with apples instead of apples with bananas). Typically, to standardize variables, you calculate the mean and standard deviation for a variable (cf. z-score). Then, for each observed value of the variable, you subtract the mean and divide by the standard deviation. Consequently, standardized variables have a mean of 0 and a standard deviation of 1. soep_no_na %&gt;% summarise(across(c(satisf_std, health_std), list(mean, sd))) %&gt;% `colnames&lt;-`(c(&quot;mean of std. satis&quot;, &quot;sd of std. satis&quot;, &quot;mean of std. health&quot;, &quot;sd of std. health&quot;)) #&gt; # A tibble: 1 × 4 #&gt; `mean of std. satis` `sd of std. satis` `mean of std. health` `sd of std. he…` #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 0.00174 1.00 -0.0102 0.998 Here summarise is asked to apply the mean() and sd() function “across” the two columns satisf_std and health_std. The means are close to zero and the standard deviation is close to one. The minor differences result from our complete case analysis (we already dropped some cases which might have been used for the initial standardization). 1.5 Never use pie charts Pit charts are evil. Why? Check the note of the documentation of pie(): ?pie() Pie charts are a very bad way of displaying information. The eye is good at judging linear measures and bad at judging relative areas. A bar chart or dot chart is a preferable way of displaying this type of data. Cleveland (1985), page 264: “Data that can be shown by pie charts always can be shown by a dot chart. This means that judgements of position along a common scale can be made instead of the less accurate angle judgements.” This statement is based on the empirical investigations of Cleveland and McGill as well as investigations by perceptual psychologists. Synthetic data for a graph. # Create data for the graph. x &lt;- c(14, 62, 17, 53) labels &lt;- c(&quot;London&quot;, &quot;New York&quot;, &quot;Singapore&quot;, &quot;Mumbai&quot;) # Plot the chart. pie(x,labels) Do a barplot instead. # Plot the chart. barplot(x, names.arg = labels) "],["mean-comparison.html", "Chapter 2 Mean Comparison 2.1 Learning Goals 2.2 Student’s t-test 2.3 Plot with Confidence 2.4 Independent t-test 2.5 Dependent t-test", " Chapter 2 Mean Comparison 2.1 Learning Goals Conceptual Skills: Compare means within and between people. What Student’s t-test has to do with beer. Data Concepts: Factor variables. Data Skills: Data Manipulation: Several options to achieve a goal. Data Analysis: Hypothesis testing with t-Tests. Data Visualization: Error plots. The term mean comparisons refers to the comparison of the average of one or more continuous variables over one or more categorical variables. It is a general term that can refer to a large number of different research questions and study designs. For example, one can compare the mean from one sample of data to a hypothetical population value, compare the means on a single variable from multiple independent groups, or compare the means for a single variable for one sample over multiple measurement occasions. In addition, more complex research designs can employ multiple continuous dependent variables simultaneously, as well as a combination of multiple groups and multiple measurement occasions. Overall, mean comparisons are of central interest in any experimental design and many correlational designs. 2.1.1 Data Preparation Load SOEP practice data from Github repository directly into memory. It makes data loading independent of paths. library(haven) soep &lt;- read_dta(&quot;https://github.com/MarcoKuehne/seminars_in_applied_economics/blob/main/Data/soep_lebensz_en.dta?raw=true&quot;) ## Sample (complete case study) library(tidyverse) soep_no_na &lt;- soep %&gt;% filter(complete.cases(.)) ## subset the year 2000 soep_2000 &lt;- subset(soep_no_na, year == 2000) ## Fixing factors soep_2000$sex_factor &lt;- as.factor(soep_2000$sex) levels(soep_2000$sex_factor) &lt;- c(&quot;male&quot;, &quot;female&quot;) ## Convert Stata format library(sjlabelled) soep_2000 &lt;- remove_all_labels(soep_2000) 2.1.2 Grouped Mean There are several options to calculate means per group. ## TAPPLY means1 &lt;- tapply(soep_2000$health_org, INDEX=soep_2000$sex, FUN=mean) ## AGGREGATE means2 &lt;- aggregate(health_org~sex, soep_2000, mean) ## BY means3 &lt;- by(soep_2000$health_org, soep_2000$sex, mean) ## DPLYR pipe library(tidyverse) means4 &lt;- soep_2000 %&gt;% group_by(sex)%&gt;% summarize(means = mean(health_org)) means_m &lt;- soep_2000 %&gt;% filter(sex==0) %&gt;% summarize(mean_education=mean(health_org)) means_f &lt;- soep_2000 %&gt;% filter(sex==1) %&gt;% summarize(mean_education=mean(health_org)) Check how different means1, means2 and means3 look like in the console. means1 #&gt; 0 1 #&gt; 3.509326 3.462017 2.1.3 Furious with Factors In order to make labels nice and usable, you need to define sex as a factor variable. A factor variable is a variable used for categorical data. Some categories are ordered (e.g. small, medium, large), some are not (e.g. men, women). An integer or string can be converted to a factor. Factors have hidden levels. Several R functions and packages treat factors fundamentally different from integers. When R handles sex as an integer, it assumes that values such as sex=-3 and sex=1.5 are possible. This is what happens to numbers. gender_numbers &lt;- c(0, 1, 0, 1, 1) summary(gender_numbers) #&gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #&gt; 0.0 0.0 1.0 0.6 1.0 1.0 table(gender_numbers) #&gt; gender_numbers #&gt; 0 1 #&gt; 2 3 A mean can be calculated. Compare to character coding. gender_words &lt;- c(&quot;male&quot;, &quot;female&quot;, &quot;male&quot;, &quot;female&quot;, &quot;female&quot;) summary(gender_words) #&gt; Length Class Mode #&gt; 5 character character table(gender_words) #&gt; gender_words #&gt; female male #&gt; 3 2 Now, convert the gender variable to a factor and calculate the mean again. soep_2000$sex_factor &lt;- as.factor(soep_2000$sex) levels(soep_2000$sex_factor) &lt;- c(&quot;male&quot;, &quot;female&quot;) means &lt;- tapply(soep_2000$health_org, INDEX=soep_2000$sex_factor, FUN=mean) means #&gt; male female #&gt; 3.509326 3.462017 The average health status is higher for men in comparison to women in the data. What else can we say about this difference? Is it small or large? A cause for concern? How can we become more confident of the result? We do a statistical test that compares the means. Hypothesis testing in statistics is a way to test the results of a survey or experiment to see if there are meaningful results. It’s basically testing whether the results are valid by figuring out the odds that the results have happened by chance. If the results may have happened by chance, the experiment won’t be repeatable and so has little use. 2.2 Student’s t-test What this has do to with beer. Student’s t-test or simply t-test was published W.S. Gossett who hid his name due to his position as a worker in a brewery company (Guiness Brewery Dublin). Here is a t-test (it takes a formula as input, the relation between health_org and sex): t.test(health_org ~ sex, data=soep_2000) #&gt; #&gt; Welch Two Sample t-test #&gt; #&gt; data: health_org by sex #&gt; t = 1.3118, df = 2968.8, p-value = 0.1897 #&gt; alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.02340655 0.11802305 #&gt; sample estimates: #&gt; mean in group 0 mean in group 1 #&gt; 3.509326 3.462017 Look at the output of the t-test: The so called t-statistic is 1.3117519 The degrees of freedom are 2968.8493968 The p-value of 0.1897053 The 95% confidence interval is [-0.0234066;0.118023] The t-statistic is at the heart of the hypothesis test. The t value has to be compared to a critical value in a t table to decide whether or not to reject the null hypothesis (H0). The null states: Move along, there’s nothing to see here! The p-value can be seen as easy-alternative to the t-statistic. You probably never look up critical t values, do you? If you just want to glimpse at it, here is one. We are looking forward getting small p-values (smaller than 0.05 by convention). If p &lt; 0.05 we say that we reject the null and conclude that there is actually something going on! If a p value is less than 0.05, the result is called statistically significant. The 95% confidence interval (CI) is another way of looking at the same issue. 95% of the values should be in the interval 0.1 to 0.3. Thus if zero is not in the CI we can be pretty sure that something is going on. Apparently, degrees of freedom prefer to keep an air of mystery about them. Actually there a several different versions of the t.test and t.test() tells you that it’s a Welch Two Sample t-test. Unfortunately, Bernard Lewis Welch did not work for a Brewery company. The Welch’s t-test (or unequal variances t-test), is a two-sample location test which is used to test the hypothesis that two populations have equal means. 2.3 Plot with Confidence Time to plot. In addition to the group means we plot confidence intervals using the gplots package with the plotmeans() function. The result is this: plotmeans() nicely presents the number of observations and labels by default. There is a statistically significant difference, when confidence intervals not overlap. Conclusion: Don’t worry about the health differential. 2.4 Independent t-test Now we learn about two different versions of the two sample t-test: Independent (or unpaired) t-test Dependent (or paired or repeated) t-test There is a one sample t-test which does not help much for group comparison. You can read more about Unpaired and paired two-sample t-tests. The first t.test on health between gender was unpaired since the default option is paired=FALSE. We used the unpaired t-test for gender, since men and women are independent in the sense of statistical samples (though this may be different in other relationships). For the next calculation we create another subsample and focus on all women who are observed in 2000 and 2004. We can compare women to men. We can compare women to themselves. women_before_after &lt;- soep_no_na %&gt;% filter(sex == 1) %&gt;% ## filter all males filter(year == 2000 | year == 2004) %&gt;% ## only use year 2000 or 2004 group_by(id) %&gt;% ## look at id groups filter(n() == 2) ## only keep groups with exactly two observations/rows The unpaired t-test on women’s health is: t.test(health_org ~ year, data=women_before_after, paired=FALSE) #&gt; #&gt; Welch Two Sample t-test #&gt; #&gt; data: health_org by year #&gt; t = 3.6158, df = 1629.9, p-value = 0.0003085 #&gt; alternative hypothesis: true difference in means between group 2000 and group 2004 is not equal to 0 #&gt; 95 percent confidence interval: #&gt; 0.07850093 0.26463633 #&gt; sample estimates: #&gt; mean in group 2000 mean in group 2004 #&gt; 3.497549 3.325980 It looks like women have been significantly more healthy in 2000 than in 2004. Can you think of a reason? What happened to all those women? 2.5 Dependent t-test Now run the t.test as paired=TRUE. t.test(health_org ~ year, data=women_before_after, paired=TRUE) #&gt; #&gt; Paired t-test #&gt; #&gt; data: health_org by year #&gt; t = 5.7026, df = 815, p-value = 1.65e-08 #&gt; alternative hypothesis: true mean difference is not equal to 0 #&gt; 95 percent confidence interval: #&gt; 0.1125131 0.2306242 #&gt; sample estimates: #&gt; mean difference #&gt; 0.1715686 The paired t-test is a little bit more exiting in the way that we need data on something observed at two different points in time. In this before-and-after scenario, the person serves as something like its own control group. We’ll come back to that. The mean difference is exactly the same (can you see it? - ask your console to calculate the difference between 3.497549 and 3.325980). But all the other statistics seem to be different: t-value, degree of freedom, p-value … In this scenario the mean difference from the paired=TRUE and paired=FALSE test are identical. But using the information from the paired sample (one person observed for two periods), the t-value became higher and thus the p-value lower. In a nutshell, we gained more statistical confidence in our estimate! Once more we saw how valuable time is. We explore this in more detail in the next chapter. Now, you can call yourself … "],["panel-data.html", "Chapter 3 Panel Data 3.1 Learning Goals 3.2 Paneldata 3.3 Data Preparation 3.4 Group by person 3.5 Data Visualization 3.6 Within and Between Variation", " Chapter 3 Panel Data 3.1 Learning Goals Conceptual Skills: Understand panel data. Panel attrition. Distinguish between and within variation. Compare the paired and unpaired t-Test to panel data. Data Skills: How set.seed() defeats randomness. Find and use functions from other people. Tidyverse e.g. group_by(), sample_n(), summarize(), count(), arrange(). Data Visualization: Panel plots (time series per group). 3.2 Paneldata Panel data are observations for the same subjects over time. Subjects can be people, households, firms or countries. Panel data are a subset of longitudinal data. Key components are the panel identifier: person (id) and time (year). Every row is a person-year combination (so called long format). Compare these types of data: Cross-section: One time measurement. Repeated cross-section: Different people. Panel: Repeated observations of the same individuals. Figure 3.1: Table 1: Types of Data. Panel data allows for special statistical analyses, e.g. fixed effects regression. With panel data we know the time-ordering of events. Panel data allow to identify causal effects under weaker assumptions (compared to cross-sectional data). Different types of data can answer different types of questions: Levels: How many people are poor in 2016 in Germany? Trends: Has poverty increased or decreased? Change: How many people went in and out of poverty? The unemployment rate in Germany is about 5 % over the last few years (Source: Annual average unemployment rate in Germany from 2005 to 2022). Imagine a college graduate enters the job market. It takes about 3 month to search for jobs, send applications and do the job interviews. Finally she finds a perfect match. After some years the college graduate falls in love with someone who lives in another city, so the student moves to this city, again looking for a job at a new employer. Imagine another college graduate. He sends 5 applications for various jobs per week. He has several mini jobs to keep afloat. The student realizes that he did not acquire the skills that are expected on the job market. After 2 years, he finally finds a suitable position. Do you think that is a cause for concern? Life after collage. alt text Panel data allows to analyze the level of unemployment in Germany as well as the changes and trajectories of individuals. We can separate a frictional unemployment component and a permanent unemployment share. Frictional unemployment is a form of unemployment reflecting the gap between someone voluntarily leaving a job and finding another. As such, it is sometimes called search unemployment. Do we accept search unemployment? Is it different from long-term unemployment? What do you think. Some famous household panel data studies are: United States: Panel Study of Income Dynamics (PSID) since 1968 Germany: Socio-Economic Panel (SOEP) since 1984 United Kingdom: British Household Panel Survey (BHPS) since 1991 Australia: Household, Income and Labour Dynamics in Australia Survey (HILDA) since 2001 These scientific datasets can often be analyzed for research and student theses free of charge. 3.3 Data Preparation Load SOEP practice data from web into temporal memory and into R. library(haven) soep &lt;- read_dta(&quot;https://github.com/MarcoKuehne/seminars_in_applied_economics/blob/main/Data/soep_lebensz_en.dta?raw=true&quot;) 3.4 Group by person group_by() is a powerful command, especially when working with panel data. Use count() after group_by() to get the number of observations of each person (id) in the data: library(tidyverse) head(soep %&gt;% group_by(id) %&gt;% count()) See result. #&gt; # A tibble: 6 × 2 #&gt; # Groups: id [6] #&gt; id n #&gt; &lt;dbl&gt; &lt;int&gt; #&gt; 1 312 1 #&gt; 2 399 2 #&gt; 3 457 3 #&gt; 4 748 1 #&gt; 5 761 2 #&gt; 6 1044 5 Adding arrange() means sorting the data by a variable (i.e. the n) either ascending or descending (from high to low). soep %&gt;% group_by(id) %&gt;% count() %&gt;% arrange(desc(n)) See result. #&gt; # A tibble: 3,550 × 2 #&gt; # Groups: id [3,550] #&gt; id n #&gt; &lt;dbl&gt; &lt;int&gt; #&gt; 1 1044 5 #&gt; 2 1300 5 #&gt; 3 1343 5 #&gt; 4 1889 5 #&gt; 5 2160 5 #&gt; 6 2241 5 #&gt; 7 3240 5 #&gt; 8 3535 5 #&gt; 9 3787 5 #&gt; 10 4107 5 #&gt; # … with 3,540 more rows Note that the output further tells you # A tibble: 3,550 x 2, i.e. there are 3550 ID-groups (or units or people). Remember that the observation period is between 2000 and 2004, i.e. min is 1 year, max is 5 years. #&gt; #&gt; 2000 2001 2002 2003 2004 #&gt; 3198 2690 2485 2299 2250 Attrition is the process of dropout from a panel study. How many people are observed in all years? Filter for a specific n and check the tibble size again. soep %&gt;% group_by(id) %&gt;% count() %&gt;% filter(n == 5) See result. #&gt; # A tibble: 1,851 × 2 #&gt; # Groups: id [1,851] #&gt; id n #&gt; &lt;dbl&gt; &lt;int&gt; #&gt; 1 1044 5 #&gt; 2 1300 5 #&gt; 3 1343 5 #&gt; 4 1889 5 #&gt; 5 2160 5 #&gt; 6 2241 5 #&gt; 7 3240 5 #&gt; 8 3535 5 #&gt; 9 3787 5 #&gt; 10 4107 5 #&gt; # … with 1,841 more rows 3.5 Data Visualization 3.5.1 Average Health per Year A picture is worth a thousand words. Show a time trend or a relationship at the beginning of your analysis. People fancy plots. Your plot should be interesting and easy to understand. If you think obesity or crime is a problem for society and it’s increasing over time you made a good point of why we should talk about it or analyze it more thoroughly. Actually, after months and years of empirical research, the results often can be summarized in one single plot. Health status in Germany is stable. 3.5.2 Individual Health per Year Next, we dig deeper into personal health stories. 3.5.2.1 Random Panel Sample Let’s use sample_n() for random selection of observations. Each time this command is run, a different random set of observations is drawn. Note that these 5 random observations/rows do not stem from the same people. soep %&gt;% sample_n(5) #&gt; # A tibble: 5 × 9 #&gt; id year sex education no_kids health_org satisf_org health_std #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; #&gt; 1 5610 2000 1 [female] 10 2 4 [good] 2 [2 Sati… 0.567 #&gt; 2 424577 2003 1 [female] 16 0 5 [very good] 9 [9 Sati… 1.60 #&gt; 3 262073 2001 0 [male] 15 0 3 [satisfacto… 4 [4 Sati… -0.464 #&gt; 4 101799 2003 1 [female] 14 3 3 [satisfacto… 8 [8 Sati… -0.464 #&gt; 5 305980 2001 1 [female] 10.5 0 4 [good] 8 [8 Sati… 0.567 #&gt; # … with 1 more variable: satisf_std &lt;dbl&gt; If you plant a seed with set.seed randomness becomes reproducible. set.seed(42) soep %&gt;% sample_n(5) #&gt; # A tibble: 5 × 9 #&gt; id year sex education no_kids health_org satisf_org health_std #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; #&gt; 1 564721 2001 1 [female] 11.5 0 4 [good] 8 [8 Sati… 0.567 #&gt; 2 643474 2003 0 [male] NA 2 4 [good] 7 [7 Sati… 0.567 #&gt; 3 121058 2003 1 [female] 10.5 0 3 [satisfacto… 5 [5 Sati… -0.464 #&gt; 4 268036 2004 1 [female] NA 0 3 [satisfacto… 9 [9 Sati… -0.464 #&gt; 5 481638 2004 0 [male] 11.5 2 4 [good] 8 [8 Sati… 0.567 #&gt; # … with 1 more variable: satisf_std &lt;dbl&gt; 3.5.2.2 Personalize Functions Is there a sample_n_groups command in the tidyverse? Unfortunately not. Even in such a case, it’s unlikely that you need to invent something new. One of the first Google hits is: https://cmdlinetips.com/2019/07/how-to-randomly-select-groups-in-r-with-dplyr/ and they suggest: sample_n_groups = function(grouped_df, size, replace = FALSE, weight=NULL) { grp_var &lt;- grouped_df %&gt;% groups %&gt;% unlist %&gt;% as.character random_grp &lt;- grouped_df %&gt;% summarise() %&gt;% sample_n(size, replace, weight) %&gt;% mutate(unique_id = 1:NROW(.)) grouped_df %&gt;% right_join(random_grp, by=grp_var) %&gt;% group_by_(grp_var) } If you run this chunk the function sample_n_groups appears in the right upper panel in RStudio. Now you can use this particular function in your current session. Don’t worry, you don’t have to understand everything from the code provided by others, but make sure that it behaves the way you expect it to. Since this function is based on dplyr commands you can use it within a pipe chain, e.g. pipe it into a ggplot. set.seed(42+42) soep %&gt;% group_by(id) %&gt;% sample_n_groups(3) %&gt;% # select all given observations across time for 5 people ggplot(aes(x = year, y = health_org, group=as_factor(id), color=as_factor(id))) + geom_line() + geom_point() + labs(title=&quot;Health Status per Person&quot;, x=&quot;Year&quot;, y=&quot;Health Status&quot;, color=&quot;Person&quot;) + ylim(1,5) This is test data from the practice data set. It might be helpful to understand what people we selected to compare our code results. Working with real questionnaire data, next show personal information. If you really need a graph like this, drop the legend. Never show person IDs in a report. 3.5.2.3 Minimum Observations per Group The full potential of panel data is to track people over time. We can literally follow people from graduation, to their first job, marriage, first child and buying yourself a house. But we hardly see that from the previous plot for all people. We select randomly 3 people who are observed at least 3 times and plot their life satisfaction over time in a line plot (again, there are several options). set.seed(42+42) soep %&gt;% group_by(id) %&gt;% filter(n()&gt;=3) %&gt;% # the moment we drop some data sample_n_groups(3) %&gt;% # select all given observations across time for 3 people ggplot(aes(x = year, y = health_org, col=factor(id))) + geom_line() + geom_point() + # add points connected by lines labs(title=&quot;Health Status over Time by Person&quot;, subtitle=&quot;Random Sample of 3 People with at least 3 observations.&quot;, x=&quot;Year&quot;, y=&quot;Health Status&quot;, colour=&quot;Person&quot;) + # give some illustrative labels ylim(1,5) # limit the scale always to all possible values, to prevent random misperceptions 3.6 Within and Between Variation Here is a similar plot of life satisfaction for selected people. Person 293973 reports a dramatic change in satisfaction from one year to another. Starting from perfect happiness in 2000 (= 10), it drops to complete misery (= 0) and recovers immediately in 2002 (= 10). Is person 293973 an outlier? Can you think of reasonable scenarios behind the data? Job’s news: take away all that a person holds dear, including children, health, and property. Because this is practice data and we cannot dig deeper into life events potentially triggering these changes. Look at the previous graph from this perspective: Within variation: Within means per individual, group or unit over time. Between variation: Between means comparing individuals, groups or units (both at a point in time or over time). In 2000 person 293973 and person 317284 both reported a happiness value of 10. In 2000, there is no difference between those two people. In 2001 though, 293973 experienced a critical shock and dropped to 0 while 317284 stayed at the very same value of 10. In 2001, the difference between both is 10. Compare the years 2000 and 2001 for person 293973. The value changes within that person by -10, whereas there is no change for person 317284. You often read about changes within people (across time) and about differences between them. In the line plot, within changes happens along the horizontal x-axis, whereas between differences can be measured as the vertical distance on the y-axis. Between and within variation are new properties of a panel data variable. To fully exploit panel data, we need enough within variation. Is there enough within variation? Figure 3.2: Figure 2: Screenshot from a lecture script of Brüderl and Ludwig. The software is Stata. 3.6.1 XTSUM (from Stata) In Stata there is a command xtsum which calculates overall, between and within variation. This is not implemented in any R package so far. Still, clever people created another personal function on Stack Overflow https://stackoverflow.com/questions/49282083/xtsum-command-for-r: Show me the crazy xtsum code. # Again, copy the code and run it, and you can use it in your R session. library(rlang) XTSUM &lt;- function(data, varname, unit) { varname &lt;- enquo(varname) loc.unit &lt;- enquo(unit) ores &lt;- data %&gt;% summarise(ovr.mean=mean(!! varname, na.rm=TRUE), ovr.sd=sd(!! varname, na.rm=TRUE), ovr.min = min(!! varname, na.rm=TRUE), ovr.max=max(!! varname, na.rm=TRUE), ovr.N=sum(as.numeric((!is.na(!! varname))))) bmeans &lt;- data %&gt;% group_by(!! loc.unit) %&gt;% summarise(meanx=mean(!! varname, na.rm=T), t.count=sum(as.numeric(!is.na(!! varname)))) bres &lt;- bmeans %&gt;% ungroup() %&gt;% summarise(between.sd = sd(meanx, na.rm=TRUE), between.min = min(meanx, na.rm=TRUE), between.max=max(meanx, na.rm=TRUE), Units=sum(as.numeric(!is.na(t.count))), t.bar=mean(t.count, na.rm=TRUE)) wdat &lt;- data %&gt;% group_by(!! loc.unit) %&gt;% mutate(W.x = scale(!! varname, scale=FALSE)) wres &lt;- wdat %&gt;% ungroup() %&gt;% summarise(within.sd=sd(W.x, na.rm=TRUE), within.min=min(W.x, na.rm=TRUE), within.max=max(W.x, na.rm=TRUE)) return(list(ores=ores,bres=bres,wres=wres)) } We can use this functionality to compare our prior results. library(sjlabelled) minipanel &lt;- soep %&gt;% filter(id %in% c(293973,317284)) %&gt;% remove_all_labels() XTSUM(minipanel, varname=satisf_org, unit=id) #&gt; $ores #&gt; ovr.mean ovr.sd ovr.min ovr.max ovr.N #&gt; 1 8.625 3.50255 0 10 8 #&gt; #&gt; $bres #&gt; # A tibble: 1 × 5 #&gt; between.sd between.min between.max Units t.bar #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 2.22 6.67 9.8 2 4 #&gt; #&gt; $wres #&gt; # A tibble: 1 × 3 #&gt; within.sd within.min within.max #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 3.10 -6.67 3.33 XTSUM tells us some more results. The overall mean is 8.62 as expected. The overall smallest value of satisfaction is 0, the highest is 10. We saw this in the graph. We have N=8 observations or rows. But we only have n=2 units (see the medium panel). Units (people) are observed on average for t.bar = 4 periods (one person 3 years, one person 5 years, makes 4 years on average). Standard deviation sd is at the core of within and between variation (since it is a measure of dispersion or variation). In the previous graph, we focused on within changes and between differences. Think about examples (i.e. variables) that you expect to not have within variation. Run XTSUM() on different variables to test your knowledge. "],["text-mining.html", "Chapter 4 Text Mining 4.1 Learning Goals 4.2 Get Text 4.3 Translate Everything To English 4.4 Text Analysis 4.5 Little bit of Scraping", " Chapter 4 Text Mining 4.1 Learning Goals Conceptual Skills: What text data is and where to get text data from. What API is and how to use an API inside R. What tidy (text) data format is. Data Skills: Install packages from GitHub via devtools. Clean text data with tidytext, e.g. str_remove_all(), str_to_lower(), str_trim(). Create tidy text format with unnest_tokens() Removing stop words anti_join(). Data Visualization: Term Frequency as Wordcloud and barchart. Text data usually consists of documents which can represent words, sentences or even paragraphs of free flowing text. The inherent unstructured (no neatly formatted data columns!) and noisy nature of textual data makes it harder for data analysts to directly work on raw text data. This material also introduces new features for R markdown reports: Code Folding https://bookdown.org/yihui/rmarkdown-cookbook/fold-show.html Tab Sets https://bookdown.org/yihui/rmarkdown-cookbook/html-tabs.html In your YAML header you can set an option under html_document: like code_folding: hide. Be aware of the necessary spacing in the html options. You can add the {.tabset} option to a headline and starting tab setting here. You end tab setting by an empty headline like #### {-}. In between you need to specify sub-headlines (at least one more hash-tag). 4.2 Get Text 4.2.0.1 Text datasets There are various built-in datasets for text (e.g. janeaustenr package). 4.2.0.1.0.1 Jane Austin books This table gives a list of all the Jane Austin books included and their rownumbers. library(janeaustenr) table(austen_books()$book) #&gt; #&gt; Sense &amp; Sensibility Pride &amp; Prejudice Mansfield Park Emma #&gt; 12624 13030 15349 16235 #&gt; Northanger Abbey Persuasion #&gt; 7856 8328 4.2.0.1.0.2 Select a specific book. You can read entire books in R. library(tidyverse) austen_books() %&gt;% filter(book == &quot;Emma&quot;) %&gt;% filter(row_number() &gt; 10, row_number() &lt; 20) #&gt; # A tibble: 9 × 2 #&gt; text book #&gt; &lt;chr&gt; &lt;fct&gt; #&gt; 1 &quot;&quot; Emma #&gt; 2 &quot;CHAPTER I&quot; Emma #&gt; 3 &quot;&quot; Emma #&gt; 4 &quot;&quot; Emma #&gt; 5 &quot;Emma Woodhouse, handsome, clever, and rich, with a comfortable home&quot; Emma #&gt; 6 &quot;and happy disposition, seemed to unite some of the best blessings of&quot; Emma #&gt; 7 &quot;existence; and had lived nearly twenty-one years in the world with ver… Emma #&gt; 8 &quot;little to distress or vex her.&quot; Emma #&gt; 9 &quot;&quot; Emma 4.2.0.2 Ask people: Digital Literacy at Viadrina We ask people for their data, opinion or evaluation. Quick polls and questionnaires can be build in various software, like Zoom or Google.1 There are various provider for more sophisticated surveys (useful in research and theses), e.g. SoSci Survey or SurveyMonkey.2 4.2.0.2.0.1 Open Question 4.2.0.2.0.2 All the data Feather is a file format that can read and write faster. Storage is often reduced. The arrow package cannot read files from a web source (http). Download the file and use a local absolute or relative path to the data. library(arrow) digital &lt;- read_feather(&quot;data/Digital_Literacy_EN.feather&quot;) library(tidyverse) glimpse(digital) #&gt; Rows: 77 #&gt; Columns: 12 #&gt; $ Research &lt;int&gt; 5, 5, 4, 4, 5, 4, 4, 5, 4, 2, 4, 4, 2, 4, 4, 5, 3, 4, 5, 3… #&gt; $ Interaction &lt;int&gt; 5, 5, 3, 4, 1, 5, 4, 5, 5, 5, 5, 5, 5, 3, 4, 5, 4, 4, 5, 4… #&gt; $ Identity &lt;int&gt; 3, 3, 3, 4, 3, 4, 2, 5, 5, 5, 3, 4, 4, 3, 4, 5, 2, 4, 5, 4… #&gt; $ Content &lt;int&gt; 5, 4, NA, 3, 3, 4, 2, 4, 4, 1, 3, 4, 4, 4, 2, 3, 2, 4, 3, … #&gt; $ Privacy &lt;int&gt; 4, 3, 2, 2, 5, 3, 2, 5, 4, 3, 4, 4, 3, 2, 1, 2, 2, 5, 3, 4… #&gt; $ Problems &lt;int&gt; 3, 2, 1, 4, 3, 2, 2, 5, 3, 4, 4, 3, 3, 2, 3, 4, 4, 5, 2, 3… #&gt; $ Teaching &lt;int&gt; 2, 4, 3, 4, 5, 1, 3, 5, 5, 5, 3, 4, 5, 4, 1, 5, 2, 5, 4, 4… #&gt; $ Skills &lt;chr&gt; &quot;Excel&quot;, &quot;Neben den grundlegenden Komputerkentnissen noch … #&gt; $ Faculty &lt;fct&gt; Econ, Econ, Econ, Econ, Econ, Econ, Econ, Econ, Econ, Econ… #&gt; $ Level &lt;chr&gt; &quot;Master&quot;, &quot;Master&quot;, &quot;Master&quot;, &quot;Bachelor&quot;, &quot;Bachelor&quot;, &quot;Bac… #&gt; $ Gender &lt;fct&gt; Female, Male, Female, Female, Female, Male, Male, Female, … #&gt; $ Skills_EN &lt;chr&gt; &quot;Excel&quot;, &quot;Besides the basic computer skills, some basic kn… 4.2.0.2.0.3 The Open Answers In the digital data there are German and English answers to the question what digital competencies are required by students at Viadrina. head(digital$Skills) #&gt; [1] &quot;Excel&quot; #&gt; [2] &quot;Neben den grundlegenden Komputerkentnissen noch eininge Grundkentnissen von Microsoft und Google Leistungen (MS Office, Google drive etc.). Außerdem gibt&#39;s an Viadrina keine hohe digitale Voraussetzungen. &quot; #&gt; [3] &quot;&quot; #&gt; [4] &quot;Ganz viel, ich habe das Gefühl dass meine Mitstudierenden keine Ahnung haben wie man richtig mit digitalen Medien umgeht und auch Programmen wie Office&quot; #&gt; [5] &quot;&quot; #&gt; [6] &quot;Digital research, Data visualisation / Content creation, Digital security and Legal literacy in the respective area&quot; 4.3 Translate Everything To English 4.3.0.1 Deepl API Use Deepl to translate all German responses in digital$Skills into English. There are options: Use website manually https://www.deepl.com/translator Use Deepl API and R in a programmatic way https://www.deepl.com/pro##developer An application programming interface (API) is another piece of software that connects computer programs. It is a type of software interface, offering a service to other pieces of software. Registration for the track DeepL API Free at https://www.deepl.com/pro##developer requires credit card information for identity check (but no payment). The documentation tells what is included in this pricing model: DeepL API Free is a variant of our DeepL API Pro plan that allows developers to translate up to 500,000 characters per month for free. https://support.deepl.com/hc/en-us/articles/360021200939-DeepL-API-Free 4.3.0.2 Deeplr Use deeplr, a package that offers an interface to the Deepl API (use free version). Some packages are not yet released on the official CRAN server. Good packages can be found on GitHub. https://github.com/zumbov2/deeplr Use devtools to install this package from the GitHub repo. The aim of devtools is to make package development easier by providing R functions that simplify and expedite common tasks. install.packages(&quot;devtools&quot;) devtools::install_github(&quot;zumbov2/deeplr&quot;) Using the API inside R requires at least one authentication key (password). Do not show or store your auth keys in a script. deeplr::usage2(&quot;KEY&quot;) #&gt; $character_count #&gt; [1] 0 #&gt; #&gt; $character_limit #&gt; [1] 500000 ## deeplr::translate2( ## text = &quot;R ist eine freie Programmiersprache für statistische Berechnungen und Grafiken. Sie wurde 1992 von Statistikern für Anwender mit statistischen Aufgaben neu entwickelt.&quot;, ## target_lang = &quot;EN&quot;, ## auth_key = &quot;KEY&quot; ## ) #&gt; [1] &quot;R is a free programming language for statistical calculations and graphics. It was newly developed in 1992 by statisticians for users with statistical tasks.&quot; 4.4 Text Analysis For this analysis we focus on the intro information on R from English Wikipedia. library(wikifacts) R_EN &lt;- wiki_define(&#39;R (programming language)&#39;) R_EN #&gt; R (programming language) #&gt; &quot;R is a programming language for statistical computing and graphics supported by the R Core Team and the R Foundation for Statistical Computing. Created by statisticians Ross Ihaka and Robert Gentleman, R is used among data miners, bioinformaticians and statisticians for data analysis and developing statistical software. Users have created packages to augment the functions of the R language.\\nAccording to user surveys and studies of scholarly literature databases, R is one of the most commonly used programming languages used in data mining. As of March 2022, R ranks 11th in the TIOBE index, a measure of programming language popularity, in which the language peaked in 8th place in August 2020.The official R software environment is an open-source free software environment within the GNU package, available under the GNU General Public License.&quot; 4.4.0.1 Cleaning Load the tidytext package. We summarize individual tasks like removing digits, punctuation, whitespaces and seting everything to lower case in the clean_text() function. There is a newline operator \\n left. You can replace it with uncommenting the last command. library(tidytext) ## text cleaning clean_text &lt;- function(x) { x %&gt;% ## Remove digits str_remove_all(&quot;[:digit:]&quot;) %&gt;% ## Remove punctuation str_remove_all(&quot;[[:punct:]]&quot;) %&gt;% ## Make everything lowercase str_to_lower() %&gt;% ## Remove any trailing whitespace around the text str_trim(&quot;both&quot;) ##%&gt;% ##str_replace_all(&quot;[\\r\\n]&quot; , &quot; &quot;) } #&gt; [1] &quot;r is a programming language for statistical computing and graphics supported by the r core team and the r foundation for statistical computing created by statisticians ross ihaka and robert gentleman r is used among data miners bioinformaticians and statisticians for data analysis and developing statistical software users have created packages to augment the functions of the r language\\naccording to user surveys and studies of scholarly literature databases r is one of the most commonly used programming languages used in data mining as of march r ranks th in the tiobe index a measure of programming language popularity in which the language peaked in th place in august the official r software environment is an opensource free software environment within the gnu package available under the gnu general public license&quot; 4.4.0.2 Tidytext Format Tidy data has a specific structure: Each variable is a column Each observation is a row We thus define the tidy text format as being a table with one-token-per-row. A token is a meaningful unit of text, such as a word, that we are interested in using for analysis, and tokenization is the process of splitting text into tokens. tidytext &lt;- R_EN_clean %&gt;% as_tibble() %&gt;% unnest_tokens(word, value) %&gt;% count(word, sort=TRUE) head(tidytext) #&gt; # A tibble: 6 × 2 #&gt; word n #&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 the 10 #&gt; 2 r 8 #&gt; 3 and 6 #&gt; 4 in 5 #&gt; 5 of 5 #&gt; 6 is 4 4.4.0.3 Stopwords Stop words are a set of commonly used words in a language. Examples of stop words in English are “a”, “the”, “is”, “are” and etc. Stop words are commonly used in Text Mining and Natural Language Processing (NLP) to eliminate words that are so commonly used that they carry very little useful information. data(stop_words) tidytext &lt;- tidytext %&gt;% anti_join(stop_words) head(tidytext) #&gt; # A tibble: 6 × 2 #&gt; word n #&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 language 4 #&gt; 2 data 3 #&gt; 3 programming 3 #&gt; 4 software 3 #&gt; 5 statistical 3 #&gt; 6 computing 2 4.4.0.4 Term Frequency Word clouds (also known as text clouds or tag clouds) work in a simple way: the more a specific word appears in a source of textual data (such as a speech, blog post, or database), the bigger and bolder it appears in the word cloud. 4.5 Little bit of Scraping library(rvest) read_html(&quot;https://en.wikipedia.org/wiki/R_(programming_language)&quot;) %&gt;% ## extract paragraphs html_nodes(&quot;p&quot;) %&gt;% ## extract text html_text() %&gt;% ## clean clean_text() %&gt;% as_tibble() %&gt;% ## tidy text unnest_tokens(word, value) %&gt;% count(word, sort=TRUE) %&gt;% ## stopwords anti_join(stop_words) %&gt;% ## select first top_n(20) %&gt;% ## reorder mutate(word = reorder(word, n)) %&gt;% ## create frequency plot ggplot(aes(x=word, y = n)) + geom_col() + coord_flip() + ggtitle(&quot;Term Frequency of top 20 clean words in Wikipedia aRticle&quot;) https://www.google.de/intl/en/forms/about/↩︎ See https://www.soscisurvey.de/ and https://www.surveymonkey.de/↩︎ "],["relationships.html", "Chapter 5 Relationships 5.1 Minimal Example 5.2 Application", " Chapter 5 Relationships “[M]y ally is the Force, and a powerful ally it is. Life creates it, makes it grow. Its energy surrounds us, binds us. Luminous beings are we, not this crude matter. You must feel the Force flow around you. Here, between you, me, the tree, the rock, yes, even between the land and the ship.” Yoda. – Episode V: The Empire Strikes Back The most interesting research questions in social science are about statistical relationships between variables. How can we make a relation between the tree and the land palpable? Relationships are measured via covariance or correlation. The relation between two variables may be expressed in a scatter plot. 5.1 Minimal Example Here is some data. x=c(4,13,19,25,29) y=c(10,12,28,32,38) 5.1.1 Variance Definition. The variance is defined as the average quadratic deviation from the mean: \\[var(x) = \\frac{1}{n-1} \\sum (x_i - \\overline{x} )^2\\] The variance of x is 98 and can be calculated via var() in R. # Built-in command var(x) #&gt; [1] 98 The variance of x can be calculated from its components in R as a combination of sum(), mean() and length(). # Variance by hand sum( (x-mean(x))^2 )/(length(x) - 1) #&gt; [1] 98 The standard deviation is derived from variance and tells, on average, how far each value lies from the mean. It’s the square root of variance. Variance and standard deivation measure the variability of a variable. For the truly dedicated. When you have collected data from every member of the population that you’re interested in, you can get an exact value for population variance. When you collect data from a sample, the sample variance is used to make estimates or inferences about the population variance. Nerd Fact. Geek Trivia. Sheldon. The term variance was first introduced by Ronald Fisher in his 1918 paper The Correlation Between Relatives on the Supposition of Mendelian Inheritance:[21] 5.1.2 Variation ARound the Mean The one-dimensional variable x is visualized as points on a line. The mean of x is 18 (red bold line). The standard variation of x is 9.8994949 and surrounds the mean. For the truly dedicated. In statistics, the empirical rule states that 99.7% of data occurs within three standard deviations of the mean within a normal distribution. To this end, 68% of the observed data will occur within the first standard deviation, 95% will take place in the second deviation, and 97.5% within the third standard deviation. 5.1.3 Scatterplot The scatterplot is a two-dimensional instrument. It shows the original information from x and y and their respective means as bold red lines. 5.1.4 Covariance Covariance is a measure of the joint variability of two variables. The main idea of covariance is to classify three types of relationships: positive, negative or no relationship. For each data point, we multiply the differences with the respective mean. When both values are smaller or greater than the mean, the result will be positive. # Built-in command cov(x,y) #&gt; [1] 117.5 The covariance of x can be calculated from its components in R as a combination of sum(), mean() and length(). # Covariance by hand (sum((x-mean(x))*(y-mean(y)))) / (length(x)-1) #&gt; [1] 117.5 5.1.5 Covariance Visualization Now we turn to the visualization of the covariance. For each data point, we multiply the differences with the respective mean. This results in several rectangular areas starting at the intersection of means as a new origin. The covariance sums up all these areas. From the graph, can you validate the covariance result from cov(x,y) by mental calculation? 5.1.6 Correlation Definition Covariance quantifies a relationship and is similar to correlation but when the covariance is calculated, the data are not standardized. Therefore, the covariance is expressed in units that vary with the data and is not converted to a standardized scale of 1 to +1. Because the data are not standardized, you cannot use the covariance statistic to assess the strength of a linear relationship (a covariance of 117 can be very low for one relationship and 0.23 very high for another relationship). To assess the strength of a relationship between two variables use a correlation coefficient. cor() is a basic function to calculate the correlation coefficient. # Basic function cor(x,y) #&gt; [1] 0.9564548 cor.test() is a more sophisticated version including a hypothesis test. # More advanced function cor.test(x,y) #&gt; #&gt; Pearson&#39;s product-moment correlation #&gt; #&gt; data: x and y #&gt; t = 5.6757, df = 3, p-value = 0.01084 #&gt; alternative hypothesis: true correlation is not equal to 0 #&gt; 95 percent confidence interval: #&gt; 0.4751038 0.9972195 #&gt; sample estimates: #&gt; cor #&gt; 0.9564548 The correlation test is based on a t-value (t = 5.6757104) and returns a p-value (0.0108364) for statistical significance. t- and p-value can be calculated in R programmatically from basic commands as a combination of cor() and sqrt(). For the p-value you can use the pt(). t &lt;- cor(x,y) * sqrt(3) / sqrt(1-cor(x,y)^2) t #&gt; [1] 5.67571 p &lt;- (1 - pt(q = abs(t), df = 3))*2 p #&gt; [1] 0.01083644 5.1.7 Chi Square https://statisticsbyjim.com/hypothesis-testing/chi-square-test-independence-example/ 5.2 Application Now, the time has come to apply your knowledge to real questionnaire data – your data. Answers are anonymous, names and matriculation number have been removed. The data is provided on github. library(readr) GF &lt;- read_csv(&quot;https://raw.githubusercontent.com/MarcoKuehne/seminars_in_applied_economics/main/Data/GF_2022_57.csv&quot;) glimpse(GF) #&gt; Rows: 57 #&gt; Columns: 8 #&gt; $ Academic.level &lt;chr&gt; &quot;Bachelor&quot;, &quot;Bachelor&quot;, &quot;Master&quot;, &quot;Mast… #&gt; $ Gender &lt;chr&gt; &quot;Female&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Male&quot;, &quot;Ma… #&gt; $ Age &lt;dbl&gt; 23, 22, 23, 24, 27, 23, 20, 22, 27, 22,… #&gt; $ Total.Semesters &lt;dbl&gt; 8, 10, 9, 2, 10, 7, 5, 8, 13, 10, 8, 8,… #&gt; $ Background.in.Statistics &lt;dbl&gt; 2, 4, 4, 3, 2, 3, 2, 2, 4, 4, 2, 2, 2, … #&gt; $ Background.in.R &lt;dbl&gt; 2, 3, 2, 1, 1, 1, 3, 1, 4, 4, 1, 2, 2, … #&gt; $ Background.in.Academic.Writing &lt;dbl&gt; 2, 2, 4, 3, 4, 2, 3, 2, 4, 3, 1, 2, 3, … #&gt; $ Expectations &lt;chr&gt; &quot;I want to be efficient in my knowledge… 5.2.1 One Variable Graphics The histogram shows the absolute frequency of semesters of students in 2022. hist(GF$Total.Semesters, main=&quot;Histogram of Semester&quot;, xlab=&quot;Semester&quot;, ylab=&quot;Frequency&quot;, breaks=12) 5.2.2 Two Variable Graphics The scatterplot show the relationship between age and semester. A regression line is added to the plot to illustrate the general tendency of the relationship. lm() builds a linear model. Inside goes a formula of y ~ x and a dataset with the data option. abline() adds an object after the plot in base R. plot(GF$Age, GF$Total.Semesters, main=&quot;Relationship between Age and Semester&quot;, xlab=&quot;Age&quot;, ylab=&quot;Semester&quot;, cex=1.5, col=&quot;red&quot;, pch=7) linear_model &lt;- lm(Total.Semesters~Age, data=GF) abline(linear_model) 5.2.3 Correlation and Regression What is the relationship between the relationship-measures correlation and simple regression? linear_model &lt;- lm(Total.Semesters~Age, data=GF) linear_model$coefficients #&gt; (Intercept) Age #&gt; 1.8010913 0.2323192 The regression coefficient of age is 0.2323192. The Pearson correlation coefficient (between -1 and 1) is cor(GF$Age, GF$Total.Semesters, method=&quot;pearson&quot;) #&gt; [1] 0.1992823 The correlation coefficient and regression coefficient are related and only coincide when the two variables are on the same scale. The most common way of achieving this is through standardization. \\[\\beta = cor(X,Y) \\cdot \\frac{SD(Y)}{SD(X)} \\] We show the equivalence of the beta coefficient and the adjusted correlation coefficient. Access the regression coefficient of age from the linear model and store it as reg_coef_age. # Store coefficient reg_coef_age &lt;- linear_model$coefficients[2] reg_coef_age #&gt; Age #&gt; 0.2323192 # Alternative access reg_coef_age &lt;- summary(linear_model)$coefficients[2,1] reg_coef_age #&gt; [1] 0.2323192 Calculate and store the adjusted correlation coefficient as adj_cor_coef. adj_cor_coef &lt;- cor(GF$Age, GF$Total.Semesters) * sd(GF$Total.Semesters) / sd(GF$Age) adj_cor_coef #&gt; [1] 0.2323192 Print out the logical comparison of reg_coef_age and adj_cor_coef. # Are those betas perfectly equal? reg_coef_age == adj_cor_coef #&gt; [1] FALSE What happened? Round to 6 digits with round() and try again. round(reg_coef_age, 6) == round(adj_cor_coef,6) #&gt; [1] TRUE "],["regression.html", "Chapter 6 Regression 6.1 From Artists and Economists 6.2 Data is everywhere 6.3 For the truly dedicated 6.4 Survival of the Fittest Line 6.5 On the Shoulders of Giants", " Chapter 6 Regression Nice examples: https://towardsdatascience.com/a-beginners-guide-to-using-instrumental-variables-635fd5a1b35f As an undergraduate I studied economics, which meant I studied a lot of regressions. It was basically 90% of the curriculum (when we’re not discussing supply and demand curves, of course). The effect of corruption on sumo wrestling? Regression. Effect of minimum wage changes on a Wendy’s in NJ? Regression. Or maybe The Zombie Lawyer Apocalypse is more your speed (O.K., not a regression, but the title was cool). This chapter introduces the workhorse of empirical research in the social science: Regression. 6.1 From Artists and Economists “Paul Cezanne died in October 1906 at the age of 67. In time he would be generally regarded as the most influential painter who had worked in the nineteenth century (e.g., Clive Bell, 1982; Clement Greenberg, 1993). Art historians and critics would also agree that his greatest achievement was the work he did late in his life.” – Galenson, D. W., &amp; Weinberg, B. A. (2001). Creating modern art: The changing careers of painters in France from impressionism to cubism. American Economic Review, 91(4), 1063-1071.3 This analysis investigates famous painter. We wonder if there is a relationship between the age of an artist and his productivity? Do artists improve their skills and performance over an entire lifetime step-by-step such that older artists are better than younger artists since they had more “time to practice”? Or is there an optimum age for performance as compared to athletic performances which reaches a peak in youth? Perhaps no one can tell if and when you are kissed by a muse, so exceptional art happens randomly? Perhaps it takes time to become more well-known. You need time to travel and show or sell your art in different places. Thus when you produce “more art” you increase the chance to be discovered by the public or a patron? Have you ever heard of an artist who exactly created one piece of art? We raise the question:   What is the relationship between the age of an artist and his productivity?   A research question is … focused on a single issue, specific enough to answer thoroughly and feasible to answer within the given time frame or practical constraints not to mention relevant to your field of study. But what exactly is productivity and how can we measure it? To keep things simple we follow the literature and measure productivity via auction prices for paintings. That’s a very economic perspective on art. Operationalization is … the process of defining the measurement of a phenomenon that is not directly measurable What is intelligence and how can we measure it? Perhaps with the intelligence quotient (IQ). Perhaps something else. 6.2 Data is everywhere Researchers use auction price data for which they have to pay. We use free information from a Wikipedia List of most expensive paintings of all time. The auction prices are inflation-adjusted by consumer price index in millions of United States dollars in 2019. That’s another interesting economic procedure, that we take for given at this analysis. 6.2.1 Data in a table This is the data in datatable format (i.e. you can search and sort the data in the html document): Tabular data is… common in data analysis. You can create a table in Word or Excel. 6.2.2 Data in a graph Two variables from our data table can be depicted in what is called a scatterplot. The axes are called … ordinate or y-axis (here: price) and abscissa or x-axis (here: age). 6.2.3 The trend Can you spot a trend in the data? The line plot suggests that the relationship between price and age exhibits a positive trend. There is an increase in price for older artists. The older the artist, the higher the auction prices. 6.2.4 The blackbox The mission is to find a mathematical function that describes the trend. In other words, we are looking for the black box that transforms the input into the output: alt text here A mathematical function is … an expression, rule, or law that defines a relationship between one variable (the independent variable, on the x-axis) and another variable (the dependent variable, on the y-axis). From looking at the graph, here are two suggestions: \\[\\begin{align} \\text{price} = 80 + 0.5 \\cdot \\text{age} \\tag{Suggestion 1} \\\\ \\text{price} = 90 + 0.2 \\cdot \\text{age} \\tag{Suggestion 2} \\\\ \\end{align}\\] A linear function is … defined by two components, intercept (with the y-axis) and it’s slope. How can we compare the two suggested lines? Which linear function represents the relationship best? 6.2.5 Nobody’s perfect We all make mistakes. So do the linear functions: \\[ \\begin{align} \\text{price} = 80 + 0.5 \\cdot \\text{age} \\tag{Suggestion 1} \\\\ 101 = 80 + 0.5 \\cdot 42 \\tag{Calculation for Hohlbein} \\\\ \\end{align}\\] The equation tells (or predicts) that for any artist at the age of 42 it expects a auction price for a painting of 101 million US Dollar. Darmstadt Madonna was sold for 85 million US dollar. The linear function overestimated the true value. When you look at the graph, you see some predictions are more accurate (close to the true values) than others. All are either above or below the line. A residual (or error) is … the vertical distance between the actual and the predicted value. 6.2.6 Vocab Wrap-Up Let’s wrap up our regression vocab! We want to find an equation that describes the phenomenon of interest: \\[ \\begin{align} \\text{outcome} &amp;= f(\\text{explanatory}) + \\text{noise} \\tag{Generic statistical model} \\\\ \\text{outcome} &amp;= \\text{intercept} + \\text{slope} \\cdot \\text{explanatory} + \\text{noise} \\tag{Generic linear model} \\\\ \\end{align}\\] A regression model is suggested by the researcher. A more concrete regression model looks like this: \\[Y = \\beta_1 + \\beta_2 X + \\epsilon\\] A model can be easy or complicated. It definitely contains variables and parameters. Variables: Things that we measure (or have data). Parameters: Constant values we believe to represent some fundamental truth about the relationship between the variables. What we (i.e. the statistical software) actual do is an estimation. In textbooks the same equation can be found with hats: \\[ \\widehat{Y} = \\widehat{\\beta}_1 + \\widehat{\\beta}_2 \\cdot X \\] \\(\\widehat{Y}\\) are called the fitted or predicted values. \\(\\widehat{\\beta}\\) are regression coefficients (this is the estimate of the unknown population parameter). As we have seen in the graph before, the differences between the actual and the predicted values are the residuals \\(e = Y - \\widehat{Y}\\). 6.3 For the truly dedicated Now we have all the ingredients we need. Let’s get this party started! Carlton Dance The overall goal is to make as little as possible mistakes! What kind of mistake? The deviation from the observed values! What could come to your mind is to minimize the sum of all errors: \\[\\sum e \\rightarrow \\min\\] But wait, there is more. Is it fair to say that the sum should be small? Compare The Scream and Meules, their deviations are \\(+17.5\\) and \\(-13.6\\) (very similar). So taken these two together, there’s almost not mistake! That is to say, positive and negative deviations cancel each other out. Thus we need one more twist in the story: \\[\\sum e^2 \\rightarrow \\min\\] The fitting procedure is … is called ordinary least squares (short OLS). The goal of OLS is to minimize the residual sum of squares. 6.3.1 Algebra Algebra comes from Arabic, meaning “reunion of broken parts”. We often work with matrices and vectors. Now let’s put all the things together. By convention, the normal version of a vector is a vertical list of numbers in big parentheses (column vector). Transpose is when we change the rows and columns. In order to square a vector we need the following: \\[\\sum e^2 = e^T \\cdot e \\rightarrow \\min\\] Let’s introduce matrix notation (there are 6 observations and two parameters): \\[ \\begin{align} Y &amp;= \\beta_0 + \\beta_1 X + \\epsilon \\tag{X is a variable, Y is a variable} \\\\ \\begin{pmatrix} Y_1 \\\\ Y_2 \\\\ Y_3 \\\\ Y_5 \\\\ Y_6 \\end{pmatrix} &amp;= \\begin{pmatrix} 1 &amp; X_{11} \\\\ 1 &amp; X_{12} \\\\ 1 &amp; X_{13} \\\\ 1 &amp; X_{14} \\\\ 1 &amp; X_{15} \\\\ 1 &amp; X_{16} \\end{pmatrix} \\begin{pmatrix} \\beta_1 \\\\ \\beta_2 \\end{pmatrix} + \\begin{pmatrix} \\epsilon_1 \\\\ \\epsilon_2 \\\\ \\epsilon_3 \\\\ \\epsilon_4 \\\\ \\epsilon_5 \\\\ \\epsilon_6 \\\\ \\end{pmatrix} \\\\ y &amp;= X \\beta + \\epsilon \\tag{X is a matrix, y is a vector} \\end{align}\\] The residual is \\(e = y - X \\beta\\) which we can plug in our minimal sum of squares: \\[\\begin{align} \\sum e^2 &amp;= e^T \\cdot e \\tag{short RSS}\\\\ &amp;= (y - X \\beta )^T (y - X \\beta) \\tag{$(A+B)^T = A^T + B^T$}\\\\ &amp;= (y^T - X^T \\beta^T) (y - X \\beta) \\\\ &amp;= y^T y - y^T X \\beta - X^T \\beta^T y + X^T \\beta^T X \\beta \\\\ &amp;= y^2 \\underbrace{- 2 \\beta^T X^T y}_{??} + \\beta^2 X^2 \\\\ \\end{align}\\] Did you notice what happened in the middle? The transpose of the first term is equal to the second: \\[\\begin{align} (y^T X \\beta)^T = y X^T \\beta^T \\end{align}\\] 6.3.2 Analysis In Analysis we often work with functions. Next, we are ready to optimize. Optimization (in math and economics) is done by differentiation: \\[\\begin{align} \\frac{\\partial RSS}{\\partial \\beta} &amp;= -2 X^T y + 2 \\beta X^T X = 0 \\tag{first derivative equal to zero} \\\\ 2 \\beta X^T X &amp;= 2 X^T y \\tag{rearrange terms}\\\\ \\beta X^T X &amp;= X^T y \\tag{the &quot;normal equation&quot;} \\\\ \\beta &amp;= (X^T X)^{-1} X^T y \\tag{Bam}\\\\ \\end{align}\\] 6.3.3 Take the Long Way Home The computer does the magic for us. Magic Alice Those \\(\\beta\\) coefficients are one of the most important regression results. Retrieve them step by step to enhance your understanding of the math and coding as the same time: First, we retrieve matrix X from the data set: X #&gt; [,1] [,2] #&gt; [1,] 1 91 #&gt; [2,] 1 86 #&gt; [3,] 1 67 #&gt; [4,] 1 45 #&gt; [5,] 1 80 #&gt; [6,] 1 71 Second, the transpose of X has two rows and six columns: t(X) #&gt; [,1] [,2] [,3] [,4] [,5] [,6] #&gt; [1,] 1 1 1 1 1 1 #&gt; [2,] 91 86 67 45 80 71 Next, calculate the square of the matrix (transpose times original): t(X)%*%X #&gt; [,1] [,2] #&gt; [1,] 6 440 #&gt; [2,] 440 33632 Then, the inverse of everything in parentheses (the above matrix product): solve(t(X)%*%X) #&gt; [,1] [,2] #&gt; [1,] 4.10546875 -0.0537109375 #&gt; [2,] -0.05371094 0.0007324219 Next, the product of this inverse and the transpose: solve(t(X)%*%X) %*% t(X) #&gt; [,1] [,2] [,3] [,4] [,5] #&gt; [1,] -0.78222656 -0.513671875 0.506835938 1.68847656 -0.191406250 #&gt; [2,] 0.01293945 0.009277344 -0.004638672 -0.02075195 0.004882813 #&gt; [,6] #&gt; [1,] 0.291992188 #&gt; [2,] -0.001708984 Finally, we multiply the vector \\(y\\): solve(t(X)%*%X) %*% t(X) %*% y #&gt; [,1] #&gt; [1,] 22.345215 #&gt; [2,] 1.165747 There are two numbers. It’s the \\(\\beta\\) vector! The first entry is the intercept and the second is the slope of the linear function: \\[Price = 22.3452 + 1.1657 \\cdot Age\\] 6.4 Survival of the Fittest Line The above equation is the linear function that best describes the given data. 6.5 On the Shoulders of Giants Fortunately, we are standing on the shoulders of giants. Clever people implemented the linear regression and all kinds of regressions and statistical tests in R. lm(Price ~ Age.at.Death, data = artists) #&gt; #&gt; Call: #&gt; lm(formula = Price ~ Age.at.Death, data = artists) #&gt; #&gt; Coefficients: #&gt; (Intercept) Age.at.Death #&gt; 22.345 1.166 AER is a famous and reliable economic journal.↩︎ "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
