lang='de',
retryonratelimit = TRUE)
Homeoffice <- search_tweets("Homeoffice", n = 10,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
getwd()
install.packages("learnr")
file.create('.nojekyll')
getwd()
usethis::use_git()
usethis::use_git()
usethis:use_git()
usethis::use_git()
usethis::use_git()
rmarkdown::clean_site(preview = FALSE)
render_book()
library(bookdown)
render_book()
render_book()
unlink('index_cache', recursive = TRUE)
rmarkdown::render("input.Rmd")
ode = function(t, y){
dydt <- y^2-t
list(dydt)
}
SlopeField(ode, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
SlopeField = function(FUN,xi = -5,xs = 5,yi = -5,ys = 5, radius = 0.1, grid.by = 0.25){
# FUN   - given function ODE i.e:
# xi,xs - lower and upper bound - x - plot
# yi,ys - lower and upper bound - y - plot
# grid points
seqx = seq(xi,xs,grid.by)
seqy = seq(yi,ys,grid.by)
# plot
f = c(xi,xs)
h = c(yi,ys)
plot(f,h,main="Slope field", ylab = "Dependet variable", xlab = "Independet variable", pch = ".")
# arrows
for(x in seqx){
for(y in seqy){
ym = y
xm = x
slope = unlist(FUN(x,y))
if(is.na(slope)){
cor = "black"
} else if(slope > 0){
cor = "blue"
}else if (slope < 0) {
cor = "red"
}else if(slope == 0) {
cor = "green"
}
arrows(radius*cos(atan(slope)+pi)+xm,
radius*sin(atan(slope)+pi)+ym,
radius*cos(atan(slope))+xm,
radius*sin(atan(slope))+ym,
length = 0.2*radius, col= cor)
}
}
}
SlopeField(ode, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
## diverse Balken in Abbildung zeichnen
B.zeichnen <- function(xwerte=NULL, mittelwerte=NULL, obereGrenze=NULL, untereGrenze=NULL, ... ){
## von oG bis kurz vor MW
segments( xwerte, obereGrenze, xwerte, mittelwerte+.02, ...  )
## von uG bis kurz vor MW
segments( xwerte, untereGrenze, xwerte, mittelwerte-.02, ...  )
## oG quer
segments( xwerte-.05, obereGrenze, xwerte+.05, obereGrenze, ...  )
## uG quer
segments( xwerte-.05, untereGrenze, xwerte+.05, untereGrenze, ...  )
}
## diverse Balken in Abbildung zeichnen
B.zeichnen <- function(xwerte=NULL, mittelwerte=NULL, obereGrenze=NULL, untereGrenze=NULL, ... ){
## von oG bis kurz vor MW
segments( xwerte, obereGrenze, xwerte, mittelwerte+.02, ...  )
## von uG bis kurz vor MW
segments( xwerte, untereGrenze, xwerte, mittelwerte-.02, ...  )
## oG quer
segments( xwerte-.05, obereGrenze, xwerte+.05, obereGrenze, ...  )
## uG quer
segments( xwerte-.05, untereGrenze, xwerte+.05, untereGrenze, ...  )
}
load("C:/Users/Marco2020/Dropbox/EmpiricalResearch/marcokuehne.github.io/wrintensitaet_gesamt.dat")
daten.vp<-read.table("C:\\Users\\Marco2020\\Dropbox\\EmpiricalResearch\\marcokuehne.github.io\\wrintensitaet_gesamt.dat", header=T) ## ANPASSEN!
View(daten.vp)
summary(daten.vp)
VPNR <- unique(daten.vp$vpnr)
par(mfrow=c(1,2), mar=c(0,0,0,0), oma=c(5,5,5,5))
## relative H?ufigkeit korrekt
for( i in VPNR ){
plot( quali~reiz.2, data=subset(daten.vp, vpnr==i), xlim=c(.5,2.5), ylim=c(0,1), axes=F, ann=F, col=i, lty=trunc((i%%100)/9)+1, lwd=3, type='b' )
if(i < max(VPNR)){par(new=T, ann=F)}
}
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(0,1,.1), labels=seq(0,1,.1), lwd=0, lwd.ticks=2, font=2, las=1)
## Legende
legend( 1.5, .3, legend=paste("VP ", VPNR, sep=''), ncol=6, xjust=.5, yjust=.5, col=VPNR, lwd=2, lty=trunc((VPNR%%100)/9)+1, cex=.7, box.lwd=2)
## Reaktionszeit
for( i in VPNR ){
plot( rtime~reiz.2, data=subset(daten.vp, vpnr==i), xlim=c(.5,2.5), ylim=c(150,600), axes=F, ann=F, col=i, lty=trunc((i%%100)/9)+1, lwd=3, type='b' )
if(i < max(VPNR)){par(new=T, ann=F)}
}
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(4, at=seq(150,600,50), labels=seq(150,600,50), lwd=0, lwd.ticks=2, font=2, las=1)
## Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=T, line=3, font=2, cex=1.1)
mtext("relative H?ufigkeit (korrekt)", side=2, outer=T, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=4, outer=T, line=3, font=2, cex=1.1)
## Mittelung ?ber Versuchspersonen
##---------------------------------------------
## pro Bedingung ?ber Versuchspersonen gemittelte Daten
daten.m<-aggregate(rtime~reiz.2, data=daten.vp.reiz, mean )
daten.m$standardabweichung<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime
daten.m$standardfehler<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime / sqrt(length(VPNR))
## Grafische Darstellung der Mittelwerte
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte und Standardfehler
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
ki.zeichnen(xwerte=daten.m$reiz.2, mittelwerte=daten.m$rtime, obereGrenze=daten.m$rtime+daten.m$standardfehler, untereGrenze=daten.m$rtime-daten.m$standardfehler, lwd=4)
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t: Mittelwert und Standardfehler", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t", side=3, outer=F, line=2, font=2, cex=1.1)
## pro Bedingung ?ber Versuchspersonen gemittelte Daten
daten.m<-aggregate(rtime~reiz.2, data=daten.vp.reiz, mean )
daten.m$standardabweichung<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime
daten.m$standardfehler<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime / sqrt(length(VPNR))
par(mfrow=c(1,2), mar=c(0,0,0,0), oma=c(5,5,5,5))
## relative H?ufigkeit korrekt
for( i in VPNR ){
plot( quali~reiz.2, data=subset(daten.vp, vpnr==i), xlim=c(.5,2.5), ylim=c(0,1), axes=F, ann=F, col=i, lty=trunc((i%%100)/9)+1, lwd=3, type='b' )
if(i < max(VPNR)){par(new=T, ann=F)}
}
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(0,1,.1), labels=seq(0,1,.1), lwd=0, lwd.ticks=2, font=2, las=1)
## Legende
legend( 1.5, .3, legend=paste("VP ", VPNR, sep=''), ncol=6, xjust=.5, yjust=.5, col=VPNR, lwd=2, lty=trunc((VPNR%%100)/9)+1, cex=.7, box.lwd=2)
## Reaktionszeit
for( i in VPNR ){
plot( rtime~reiz.2, data=subset(daten.vp, vpnr==i), xlim=c(.5,2.5), ylim=c(150,600), axes=F, ann=F, col=i, lty=trunc((i%%100)/9)+1, lwd=3, type='b' )
if(i < max(VPNR)){par(new=T, ann=F)}
}
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(4, at=seq(150,600,50), labels=seq(150,600,50), lwd=0, lwd.ticks=2, font=2, las=1)
## Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=T, line=3, font=2, cex=1.1)
mtext("relative H?ufigkeit (korrekt)", side=2, outer=T, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=4, outer=T, line=3, font=2, cex=1.1)
daten.m<-aggregate(rtime~reiz.2, data=daten.vp$reiz.2, mean )
daten.m$standardabweichung<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime
daten.m$standardfehler<-aggregate(rtime~reiz.2, data=daten.vp, sd )$rtime / sqrt(length(VPNR))
daten.m<-aggregate(rtime~reiz.2, data=daten.vp$reiz.2, mean )
View(daten.vp)
daten.m<-aggregate(rtime~reiz.2, data=daten.vp$reiz.2, mean )
View(daten.vp)
library(tidyverse)
library(tidyverse)
daten.vp %>%
group_by(reiz.2) %>%
mutate(rtime_mean = mean(rtime))
daten.vp
library(tidyverse)
daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime_mean = mean(rtime))
library(tidyverse)
daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime_mean = mean(rtime),
rtime_sd = sd(rtime),
rtime_se = se(rtime))
daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime_mean = mean(rtime),
rtime_sd = sd(rtime))
library(tidyverse)
daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime_mean = mean(rtime),
rtime_sd = sd(rtime),
rtime_se = rtime_sd / sqrt(length(VPNR)))
library(tidyverse)
daten.m <- daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime = mean(rtime),
standardabweichung = sd(rtime),
standardfehler = rtime_sd / sqrt(length(VPNR)))
## Grafische Darstellung der Mittelwerte
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte und Standardfehler
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
ki.zeichnen(xwerte=daten.m$reiz.2, mittelwerte=daten.m$rtime, obereGrenze=daten.m$rtime+daten.m$standardfehler, untereGrenze=daten.m$rtime-daten.m$standardfehler, lwd=4)
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t: Mittelwert und Standardfehler", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t", side=3, outer=F, line=2, font=2, cex=1.1)
plot( rtime~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
library(tidyverse)
daten.m <- daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime = mean(rtime),
standardabweichung = sd(rtime),
standardfehler = rtime_sd / sqrt(length(VPNR)))
library(tidyverse)
daten.m <- daten.vp %>%
group_by(reiz.2) %>%
summarize(rtime_mean = mean(rtime),
rtime_sd = sd(rtime),
rtime_se = rtime_sd / sqrt(length(VPNR)))
daten.m
plot( rtime_mean~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Grafische Darstellung der Mittelwerte
plot( rtime_mean~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte
plot( rtime_mean~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensität", side=3, outer=F, line=2, font=2, cex=1.1)
## Grafische Darstellung der Mittelwerte und Standardfehler
plot( rtime_mean~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
ki.zeichnen(xwerte=daten.m$reiz.2, mittelwerte=daten.m$rtime, obereGrenze=daten.m$rtime+daten.m$standardfehler, untereGrenze=daten.m$rtime-daten.m$standardfehler, lwd=4)
box(lwd=2)
## Achsen
axis(1, at=c(1:2), labels=c("hell","dunkel"), lwd=0, lwd.ticks=2, font=2)
axis(2, at=seq(300,500,25), labels=seq(300,500,25), lwd=0, lwd.ticks=2, font=2, las=1)
##Abbildungsbeschriftung
mtext("Reiztyp", side=1, outer=F, line=3, font=2, cex=1.1)
mtext("Reaktionszeit", side=2, outer=F, line=3, font=2, cex=1.1)
mtext("Experiment WRIntensit?t: Mittelwert und Standardfehler", side=3, outer=F, line=2, font=2, cex=1.1)
plot( rtime_mean~reiz.2, data=daten.m, ann=F, axes=F, type='b', lwd=4, xlim=c(.5,2.5), ylim=c(300,500))
ki.zeichnen(xwerte=daten.m$reiz.2, mittelwerte=daten.m$rtime_mean,
obereGrenze=daten.m$rtime_mean+daten.m$rtime_sd,
untereGrenze=daten.m$rtime_mean-daten.m$rtime_sd, lwd=4)
box(lwd=2)
#setwd("C:\\Users\\Marco2020\\Dropbox\\Viadrina\\Regression")
artists <- read.csv(file = 'Artists.csv', sep=";", dec=",", encoding="UTF-8")
names(artists)[1] <- "Artist"
#names(artists)[4] <- "Age at Painting"
#names(artists)[5] <- "Age at Death"
#names(artists)[6] <- "Birth Year"
SlopeField(ode_3, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
SlopeField = function(FUN,xi = -5,xs = 5,yi = -5,ys = 5, radius = 0.1, grid.by = 0.25){
# FUN   - given function ODE i.e:
# xi,xs - lower and upper bound - x - plot
# yi,ys - lower and upper bound - y - plot
# grid points
seqx = seq(xi,xs,grid.by)
seqy = seq(yi,ys,grid.by)
# plot
f = c(xi,xs)
h = c(yi,ys)
plot(f,h,main="Slope field", ylab = "Dependet variable", xlab = "Independet variable", pch = ".")
# arrows
for(x in seqx){
for(y in seqy){
ym = y
xm = x
slope = unlist(FUN(x,y))
if(is.na(slope)){
cor = "black"
} else if(slope > 0){
cor = "blue"
}else if (slope < 0) {
cor = "red"
}else if(slope == 0) {
cor = "green"
}
arrows(radius*cos(atan(slope)+pi)+xm,
radius*sin(atan(slope)+pi)+ym,
radius*cos(atan(slope))+xm,
radius*sin(atan(slope))+ym,
length = 0.2*radius, col= cor)
}
}
}
ode = function(t, y){
dydt <- y^2-t
list(dydt)
}
SlopeField(ode, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
ode_1 = function(t, y){
dydt <- y
list(dydt)
}
SlopeField(ode_1, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
x_value<-runif(100,2,8)
plot(x_value,exp(x_value))
SlopeField(ode_3, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
ode_3 = function(t, y){
dydt <- t^2
list(dydt)
}
SlopeField(ode_3, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
SlopeField(ode_3, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
lines(y,1/3*x*x*x,col="red", lwd=2)
SlopeField(ode_3, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
lines(y,1/3*x*x*x,col="red", lwd=2)
SlopeField(ode, xi = -2, xs = 5, yi = -2, ys = 2,radius = 0.1, grid.by = 0.25)
install.packages("webshot")
webshot::install_phantomjs()
include_graphics(https://static.wikia.nocookie.net/looneytunes/images/e/e1/All.jpg/revision/latest/scale-to-width-down/1000?cb=20150313020828)
lm(Price ~ Age.at.Death, data = artists)
lm(Price ~ Age.at.Death, data = artists)
knitr::include_graphics("workhorse.jpg")
knitr::include_graphics(rep("https://static.wikia.nocookie.net/looneytunes/images/e/e1/All.jpg/revision/latest/scale-to-width-down/1000?cb=20150313020828", 3))
knitr::include_graphics("images/garcon.jpg")
knitr::include_graphics("workhorse.jpg")
knitr::include_graphics('https://static.wikia.nocookie.net/looneytunes/images/e/e1/All.jpg/revision/latest/scale-to-width-down/1000?cb=20150313020828')
knitr::include_graphics("images/garcon.jpg")
knitr::include_graphics("workhorse.jpg")
getwd()
knitr::include_graphics("workhorse.jpg")
images\question4.png
knitr::include_graphics("workhorse.jpg")
knitr::include_graphics("images\question4.png")
knitr::include_graphics("images\\question4.png")
library(learnr)
library(learnr)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
detach("package:learnr", unload = TRUE)
knitr::include_graphics("images/parttime.png")
ggplot(df) +
geom_arc(aes(x0 = x, y0 = y, r = r,
start = 0, end = -1.5 * pi),
arrow = arrow()) +
geom_text(aes(x = x, y = y, label = label)) +
theme_void()
library(ggplot2)
ggplot(df) +
geom_arc(aes(x0 = x, y0 = y, r = r,
start = 0, end = -1.5 * pi),
arrow = arrow()) +
geom_text(aes(x = x, y = y, label = label)) +
theme_void()
library(ggplot2)
df <- data.frame(x = 100, y = 100, label = "R")
ggplot(df) +
geom_arc(aes(x0 = x, y0 = y, r = r,
start = 0, end = -1.5 * pi),
arrow = arrow()) +
geom_text(aes(x = x, y = y, label = label)) +
theme_void()
library(ggplot2)
library(ggforce)
df <- data.frame(x = 100, y = 100, label = "R")
ggplot(df) +
geom_arc(aes(x0 = x, y0 = y, r = r,
start = 0, end = -1.5 * pi),
arrow = arrow()) +
geom_text(aes(x = x, y = y, label = label)) +
theme_void()
empirical_process <- data.frame(x = 100,
y = 100,
component = c("research idea", "empirical research question", "data collection", "data analysis"))
View(empirical_process)
ggplot(empirical_process, aes(x = x, y = y, label = component)) +
geom_point(size=2) +
geom_line()
ggplot(empirical_process, aes(x = x, y = y, label = component)) +
geom_point(size=2) +
geom_line() +
#geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_text(aes(label=component),hjust=-0.05, vjust=0) +
geom_segment(aes(x = 50, y = 90, xend = 120, yend = 150),size = 3,
arrow = arrow(length = unit(0.5, "cm"))
ggplot(data.frame(100,100), aes(x = x, y = y, label = component))
ggplot(data.frame(100,100), aes(x = x, y = y, label = component)) +
geom_point(size=2)
ggplot(data.frame(x=100,y=100), aes(x = x, y = y, label = component)) +
geom_point(size=2)
ggplot(data.frame(x=100,y=100), aes(x = x, y = y))
install.packages("DiagrammeR")
library(DiagrammeR)
grViz(diagram = "digraph flowchart {
node [fontname = arial, shape = oval]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab1 -> tab2 -> tab3;
}
[1]: 'Learning Data Science'
[2]: 'Industry vs Technical Knowledge'
[3]: 'Statistics vs Mathematics Knowledge'
")
empirical_process <- data.frame(x = 100,
y = 100,
component = c("research idea", "empirical research question", "data collection", "data analysis"))
library(DiagrammeR)
grViz(diagram = "digraph flowchart {
node [fontname = arial, shape = oval, color = grey, style = filled]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab1 -> tab2 -> tab3;
}
[1]: 'Research Idea'
[2]: 'Empirical Research Question'
[3]: 'Data Collection'
[4]: 'Data Analysis'
")
library(DiagrammeR)
grViz(diagram = "digraph flowchart {
node [fontname = arial, shape = oval, color = grey, style = filled]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab4 [label = '@@4']
tab1 -> tab2 -> tab3 -> tab4 -> tab1;
}
[1]: 'Research Idea'
[2]: 'Empirical Research Question'
[3]: 'Data Collection'
[4]: 'Data Analysis'
")
library(DiagrammeR)
grViz(diagram = "digraph flowchart {
node [fontname = arial, shape = oval, color = grey, style = filled]
tab1 [label = '@@1']
tab2 [label = '@@2']
tab3 [label = '@@3']
tab4 [label = '@@4']
tab5 [label = '@@5']
tab1 -> tab2 -> tab3 -> tab4 -> tab5 -> tab1;
}
[1]: 'Research Idea'
[2]: 'Literature Review'
[3]: 'Empirical Research Question'
[4]: 'Data Collection'
[5]: 'Data Analysis'
")
library(learnr)
question("What number is the letter A in the English alphabet?",
answer("8"),
answer("14"),
answer("1", correct = TRUE),
answer("23")
)
unlink('index_cache', recursive = TRUE)
