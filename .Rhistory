class(links)
querfeldbeet %>%
html_nodes("a[href]") %>%
html_attr("href")
data.frame(links)
links_df <- data.frame(links)
View(links_df)
class(links)
links_df <- data.frame(links)
links_df
View(links_df)
querfeldbeet %>%
html_node("li + li") %>%
html_text()
querfeldbeet %>%
html_node(".block-56e29494-2662-4d09-a9bd-48c96d71024d") %>%
html_text()
client_id <- "s4FhUYNkr2bU3AujtUgDzA"
api_key <- "MNBPu35V2BESwcJDZ1Z_tFJBd5FSpk1y8SkPzeG0M1_BxWNT4tMOcwq2nmXHJDnLCCgW2pp2uRT4hp2ZnPRmy9J2PQ1P4zUImK439cfdt1edXaesyZpx7woU_QLAXHYx"
res <- GET("https://api.yelp.com/v3/businesses/search",
add_headers(Authorization = paste("Bearer", api_key)),
query = "latitude=47.049770&longitude=8.312501")
require(tidyverse)
require(jsonlite)
require(httr)
require(magick)
res <- GET("https://api.yelp.com/v3/businesses/search",
add_headers(Authorization = paste("Bearer", api_key)),
query = "latitude=47.049770&longitude=8.312501")
biz <- fromJSON(content(res, type = "text"))
n_biz <- biz$total
n_biz
id <- biz$businesses$id[1]
res <- GET(str_glue("https://api.yelp.com/v3/businesses/{id}/reviews"),
add_headers(Authorization = paste("Bearer", api_key)),
query = "")
rev <- fromJSON(content(res, type = "text"))
rev
mean(rev$reviews$rating)
image <- image_read(rev$reviews$user$image_url[1])
print(image)
image <- image_read(rev$reviews$user$image_url[2])
print(image)
image <- image_read(rev$reviews$user$image_url[5])
print(image)
image <- image_read(rev$reviews$user$image_url[5])
print(image)
image <- image_read(rev$reviews$user$image_url[3])
print(image)
library(tidyverse)
homeoffice_google <- read_csv("multiTimeline.csv")
library(tidyverse)
homeoffice_google <- read_csv("multiTimeline.csv")
View(homeoffice_google)
View(homeoffice_google)
library(tidyverse)
homeoffice_google <- read_csv("multiTimeline.csv", header=TRUE)
View(homeoffice_google)
homeoffice_google <- read_csv("multiTimeline.csv", header=TRUE)
?read_csv
library(tidyverse)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
ggplot(homeoffice_google, aes(x=))
View(homeoffice_google)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
View(homeoffice_google)
library(tidyverse)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
getwd()
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R")
library(tidyverse)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
View(homeoffice_google)
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R")
library(tidyverse)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
homeoffice_google <- read_csv("multiTimeline.csv")
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
View(homeoffice_google)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
View(homeoffice_google)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R\\\Scraping_Project")
View(homeoffice_google)
head(homeoffice_google)
colnames(homeoffice_google) <- c("Week", "Homeoffice")
head(homeoffice_google)
ggplot(homeoffice_google, aes(x=Week, y=Homeoffice)) + geom_line()
View(homeoffice_google)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) + geom_line()
class(homeoffice_google)
str(homeoffice_google)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) + geom_line() + geom_point()
gsub("<1", "0", homeoffice_google)
gsub("<1", "0", homeoffice_google$Homeoffice)
homeoffice_google$Homeoffice <- gsub("<1", "0", homeoffice_google$Homeoffice)
homeoffice_google$Homeoffice <- as.numeric(homeoffice_google$Homeoffice)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) + geom_line() + geom_point()
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="test")
?labs
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.")
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.") +
theme_bw() +
scale_colour_manual(values=colour)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.") +
theme_bw()
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
)
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG"
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
Buga2021 <- search_tweets("buga2021", n = 10,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
Pamela <- search_tweets("Pamela Reif", n = 10,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
Homeoffice <- search_tweets("Homeoffice", n = 100,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
View(Buga2021)
View(Homeoffice)
head(Buga2021$text)
head(Homeoffice$text)
head(Homeoffice$location)
View(Homeoffice)
head(Homeoffice$quoted_location)
table(Homeoffice$location)
head(table(Homeoffice$location))
View(Homeoffice)
table(is.na(Homeoffice$location))
is.na(Homeoffice$location)
View(Homeoffice)
table(is.na(Homeoffice$location))
table(is.na(Homeoffice$quoted_location))
table(Homeoffice$place_name)
table(Homeoffice$country_code )
table(Homeoffice$geo_coords)
head(Homeoffice$geo_coords)
Homeoffice$geo_coords
is.na(Homeoffice$geo_coords)
table(is.na(Homeoffice$geo_coords))
is.na(Homeoffice$geo_coords)
head(Homeoffice$geo_coords)
Homeoffice %>%
ggplot(aes(location)) +
geom_bar() + coord_flip() +
labs(x = "Count",
y = "Location",
title = "Twitter users - unique locations ")
Homeoffice %>%
count(location, sort = TRUE) %>%
mutate(location = reorder(location, n)) %>%
top_n(20) %>%
ggplot(aes(x = location, y = n)) +
geom_col() +
coord_flip() +
labs(x = "Count",
y = "Location",
title = "Where Twitter users are from - unique locations ")
library(tidyverse)
library(ggplot2)
library(dplyr)
require(maps)
require(viridis)
theme_set(
theme_void()
)
Homeoffice$country
some.twitter.maps <- map_data("world", region = Homeoffice$country)
table(Homeoffice$country)
some.eu.countries <- table(Homeoffice$country)
Homeoffice$country
table(Homeoffice$country)
colnames(table(Homeoffice$country))
names(table(Homeoffice$country))
twitter_maps <- map_data("world", region = twitter_countries)
twitter_countries <- names(table(Homeoffice$country))
twitter_maps <- map_data("world", region = twitter_countries)
region.lab.data <- twitter_maps %>%
group_by(region) %>%
summarise(long = mean(long), lat = mean(lat))
ggplot(twitter_maps, aes(x = long, y = lat)) +
geom_polygon(aes( group = group, fill = region))+
geom_text(aes(label = region), data = region.lab.data,  size = 3, hjust = 0.5)+
scale_fill_viridis_d()+
theme_void()+
theme(legend.position = "none")
# Berlin on a Germany Map
library(ggplot2)
require(maps)
GER <- map_data("world", region = "Germany")
ggplot(GER, aes(x = long, y = lat, group = group)) +
geom_polygon(fill="lightgray", colour = "white")+
geom_point(aes(x = 13.404954, y = 52.520008), color="red")+
geom_text(aes(x = 13.404954, y = 52.520008), label = "Berlin", color = "red", nudge_y = .2)
head(Homeoffice$text)
head(Homeoffice$text)
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R\\Scraping_Project")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
head(homeoffice_google)
colnames(homeoffice_google) <- c("Week", "Homeoffice")
str(homeoffice_google)
homeoffice_google$Homeoffice <- gsub("<1", "0", homeoffice_google$Homeoffice)
homeoffice_google$Homeoffice <- as.numeric(homeoffice_google$Homeoffice)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.") +
theme_bw()
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R\\Scraping_Project")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
#head(homeoffice_google)
colnames(homeoffice_google) <- c("Week", "Homeoffice")
str(homeoffice_google)
homeoffice_google$Homeoffice <- gsub("<1", "0", homeoffice_google$Homeoffice)
homeoffice_google$Homeoffice <- as.numeric(homeoffice_google$Homeoffice)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.") +
theme_bw()
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
setwd("E:\\!MethodSchools\\GSERM Data Scraping and Management for Social Scientists with R\\Scraping_Project")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)
homeoffice_google <- read_csv("multiTimeline.csv", col_names = TRUE)
#head(homeoffice_google)
colnames(homeoffice_google) <- c("Week", "Homeoffice")
str(homeoffice_google)
homeoffice_google$Homeoffice <- gsub("<1", "0", homeoffice_google$Homeoffice)
homeoffice_google$Homeoffice <- as.numeric(homeoffice_google$Homeoffice)
ggplot(homeoffice_google, aes(x=as.Date(Week), y=Homeoffice)) +
geom_line() + geom_point() +
labs(x="Time", y="Homeoffice (% with respect to highest value)",
title="Google Search for Homeoffice in Germany for last 5 years.") +
theme_bw()
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
Homeoffice <- search_tweets("Homeoffice", n = 50,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
head(Homeoffice$text)
table(is.na(Homeoffice$location))
table(is.na(Homeoffice$quoted_location))
head(table(Homeoffice$location))
table(Homeoffice$place_name)
head(table(Homeoffice$location))
table(Homeoffice$country_code)
head(table(Homeoffice$quoted_location))
head(table(Homeoffice$location))
head(table(Homeoffice$quoted_location))
table(Homeoffice$country)
table(Homeoffice$country_code)
head(Homeoffice$geo_coords)
table(Homeoffice$place_name)
head(table(Homeoffice$place_name))
Homeoffice %>%
count(location, sort = TRUE) %>%
mutate(location = reorder(location, n)) %>%
top_n(20) %>%
ggplot(aes(x = location, y = n)) +
geom_col() +
coord_flip() +
labs(x = "Count",
y = "Location",
title = "Where Twitter users are from - unique locations ")
Homeoffice %>%
count(location, sort = TRUE) %>%
mutate(location = reorder(location, n)) %>%
top_n(20) %>%
ggplot(aes(x = location, y = n)) +
geom_col() +
coord_flip() +
labs(x = "Count",
y = "Location",
title = "Where Twitter users are from - unique locations ")
Homeoffice %>%
count(location, sort = TRUE) %>%
mutate(location = reorder(location, n)) %>%
top_n(20)
###############################################################################
# How to Create a Map using GGPlot2
# https://www.datanovia.com/en/blog/how-to-create-a-map-using-ggplot2/
###############################################################################
library(maps)
library(viridis)
theme_set(
theme_void()
)
# Country Location in Twitter
twitter_countries <- names(table(Homeoffice$country))
# Retrieve the map data
twitter_maps <- map_data("world", region = twitter_countries)
# Compute the centroid as the mean longitude and lattitude
# Used as label coordinate for country's names
region.lab.data <- twitter_maps %>%
group_by(region) %>%
summarise(long = mean(long), lat = mean(lat))
ggplot(twitter_maps, aes(x = long, y = lat)) +
geom_polygon(aes( group = group, fill = region))+
geom_text(aes(label = region), data = region.lab.data,  size = 3, hjust = 0.5)+
scale_fill_viridis_d()+
theme_void()+
theme(legend.position = "none")
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
library(rtweet)
create_token(
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
create_token(
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
create_token(
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E")
rt <- search_tweets("data OR analytics OR scraping OR dataanalytics", n = 5000, include_rts = FALSE, retryonratelimit = TRUE)
Homeoffice <- search_tweets("Homeoffice", n = 50,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
Homeoffice <- search_tweets("Homeoffice", n = 50,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
create_token(
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
#access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
#access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E"
)
#app = "AMCExperiment1",
#consumer_key = "SH1jq3B3kHTCKdBVtX4eTJyQ8",
#consumer_secret = "yHCaHNmHqHWvAIgVX3vufX8T7aB4vNbVb4Rpi2hDtfLeRaojHm",
#access_token = "243525314-BlksRAb0fOUtsSsZ6GfM53iG6eHdCRlmy1YZK3lN",
#access_secret = "dhvwQNIXSJKJlt9PnSYSgmX0G6Q2e1Nt3mwohJxNAC7g7")
create_token(
app = "CommutingAPI",
consumer_key = "Ftj7SlzpfLi1Bw2o3UxDT5iHM",
consumer_secret = "FjolctDbK4A5vzmWmubcTU4Q6tDcPOYMlfgapJ7nsT89UR0tFG",
access_token = "1401795532645875714-7nELcTVV2hZVPFuBIHwUDYWfFJhZXy",
access_secret = "COE9PncpSp06UPqRNHWlsStrp4GMGHxn7GPIRJ9ZJZN9E"
)
Homeoffice <- search_tweets("Homeoffice", n = 50,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
Homeoffice <- search_tweets("Homeoffice", n = 10,
include_rts = FALSE,
lang='de',
retryonratelimit = TRUE)
getwd()
install.packages("learnr")
file.create('.nojekyll')
