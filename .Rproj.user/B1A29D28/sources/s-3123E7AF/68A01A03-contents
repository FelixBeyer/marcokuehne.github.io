
### Load Data ---- 

setwd("C:\\Users\\Marco2020\\Dropbox\\Viadrina\\PhD\\Enjoy_The_Ride\\Graphs")
library(haven)
hist_data <- read_dta("Exogenous_CD_Histogram_phj_data.dta")

library(ggplot2)
library(tidyverse)

### Histogram Distances ---- 
summary(hist_data$change)

hist_data %>%
  filter(change != 0) %>%
  ggplot(aes(x=change)) + geom_histogram(bins=40) +
  theme_bw() + 
  labs(
    title = "Histogram of Exogenous Changes in Commuting Distance",
    subtitle = "Identified by Firm Relocation",
    caption = waiver(), # "Commuting Changes of 0km excluded",
    tag = waiver()
  ) +
  xlim(-50,50) + 
  xlab("Change in One-Way Commuting Distance (km)") + 
  ylab("Count") + 
  theme(panel.border = element_blank())
  # theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

ggsave("Histogram_Exogenous_Commuting_2.pdf", width = 9, height = 6, units = "in")

### Prediction of Satisfaction ---- 

# dirty text
myprediction <- read.delim("my_prediction.txt")
class(myprediction) # only one vector 

# drop rows 1:5 and 26
myprediction <- myprediction %>% slice(-c(1:4,25))
colnames(myprediction) <- "values"

# reduce multiple spaces to one single space
myprediction2 <- gsub("^ *|(?<= ) | *$", "", myprediction$values, perl = TRUE)

# split up the string by one emptry space 
# https://stackoverflow.com/questions/46618430/extract-string-between-spaces
myprediction3 <- strsplit(myprediction2," ")
myprediction3[1] # first and second element does not mean anything

# create a matrix filled by list values and transform to dataframe
myprediction4 <- data.frame(matrix(unlist(myprediction3), byrow=FALSE, nrow=length(myprediction3[[1]]) ))
myprediction4 <- myprediction4[-c(1,2),] # drop first and second elements

# transpose
myprediction5 <- t(myprediction4)

# rename
colnames(myprediction5) <- c("dydx","SE", "z", "p", "CL", "CU")
rownames(myprediction5) <- c(1:20)
myprediction5

# make all characters to numeric 
# https://stackoverflow.com/questions/26391921/how-to-convert-entire-dataframe-to-numeric-while-preserving-decimals
library(tidyverse)
myprediction6 <- data.frame(apply(myprediction5, 2, function(x) as.numeric(as.character(x))))
myprediction6

# create group variable
myprediction6$flexitime <- rep(0:1,10)
myprediction6$distance <- rep(seq(10,100,10), each=2)
myprediction6$flexitime <- factor(myprediction6$flexitime, levels= c(0, 1))

myprediction6 %>%
  ggplot(aes(x=distance, y=dydx, col=flexitime)) + 
  geom_point() +
  theme_bw() + 
  labs(
    title = "Linear Prediction of Life Satisfaction",
    subtitle = "Predictive Margins",
    caption = waiver(), # "Commuting Changes of 0km excluded",
    tag = waiver()
  ) +
  #xlim(0,100) + 
  xlab("One-Way Commuting Distance (km)") + 
  ylab(" Life Satisfaction") + 
  theme(panel.border = element_blank()) + 
  scale_x_continuous(breaks = seq(0, 100, 10))

ggsave("Prediction_Satisfaction.pdf", width = 9, height = 6, units = "in")

### Regular expressions ----












